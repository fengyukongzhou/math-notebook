(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    689870,      12577]
NotebookOptionsPosition[    687230,      12516]
NotebookOutlinePosition[    687645,      12533]
CellTagsIndexPosition[    687602,      12530]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:8bcd\:8bed\:63a5\:9f99", "Chapter",
 CellChangeTimes->{
  3.912638136721949*^9},ExpressionUUID->"05b6603f-673a-4ed4-85c7-\
01f908012065"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{"NetModel", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<GPT2 Transformer Trained on WebText Data\>\"", ",", 
     RowBox[{"\"\<Task\>\"", "->", "\"\<LanguageModeling\>\""}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.883441608940345*^9, 3.883441609428472*^9}, 
   3.883441834614397*^9, 3.885054119066854*^9},
 CellLabel->"In[4]:=",
 CellID->1796951477,ExpressionUUID->"b1be46b7-12ea-4f1e-85c1-c778a764c36a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetChain",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  8.450252184953392, {0., 8.450252184953392}}], Appearance -> 
                None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["\"string\"", "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["\"class\"", "SummaryItem"], "SummaryItem"]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 TagBox[
                  
                  DynamicModuleBox[{
                   NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Weights"|>]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50257, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 1024, "$Length" -> 
                    NeuralNetworks`LengthVar[2075513245]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 1024, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 1024]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"]}|>, 
                    "decoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> "Causal", "ScoreRescaling" -> 
                    None, "MultiHead" -> True, "$InputPorts" -> 
                    "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2075513245], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2075513245], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"norm" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear1" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Tanh[0.7978845608028654 (# + 0.044715 #^3)])& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[2075513245],
                     "$InputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{768}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    0.00001, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "last" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                    "classifier" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Weights"|>], "Biases" -> None|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50257}, "$OutputSize" -> 50257, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50257}, NeuralNetworks`RealT]|>|>,
                     "probabilities" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50257}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "decoder", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "last", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "classifier", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "probabilities", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2075513245]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Type" -> 
                    "Function", "Function" -> Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[75402943]}, 
                    NeuralNetworks`IndexIntegerT[1, 50257]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> False, "$Version" -> 
                    "13.3.0", 
                    "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{50257}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\" t\"", "\" a\"", 
                    Skeleton[50254], "\"\""}, "InputDepth" -> 1, "Dimensions" -> 
                    50257, "$Rank" -> 0, "$Version" -> "13.3.0", "Multilabel" -> 
                    False|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                   DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50257", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"embedding\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "embedding"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"decoder\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "13", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "decoder"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"last\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "last"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"classifier\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    "\" \[UpperRightArrow]\""}, "RowDefault"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "classifier"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"probabilities\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 50257\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "probabilities"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50257, 768}]|>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                   Initialization :> {NetChain}], "SummaryItem"]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
      ButtonBox[
       TemplateBox[{
         PaneBox[
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxEmbedLocal"], 
           ImageSizeCache -> {12.959999999999999`, {5., 7.959999999999999}}], 
          BaselinePosition -> (Center -> Center)], 
         PaneBox[
          TemplateBox[{
            DynamicBox[
             ToBoxes[
              FEPrivate`FrontEndResource["FEStrings", "summaryBoxDataStored"],
               StandardForm], 
             ImageSizeCache -> {
              34.42334060668945, {0.9426269752532246, 5.443115362152457}}], 
            TemplateBox[{
              
              PaneSelectorBox[{
               False -> TemplateBox[{"LocalObject", "\"[\[Ellipsis]]\""}, 
                  "RowDefault"], True -> StyleBox[
                  
                  TemplateBox[{"LocalObject", "\"[\[Ellipsis]]\""}, 
                   "RowDefault"], "SummaryEmbedHover", StripOnInput -> 
                  False]}, 
               Dynamic[
                CurrentValue["MouseOver"]], ImageSize -> Automatic, 
               FrameMargins -> 0], 
              
              RowBox[{"LocalObject", "[", 
                "\"file:///C:/Users/Sun/AppData/Roaming/Wolfram/Objects/\
2c0dedc2-bc8d-4948-a995-2699cdeac470\"", "]"}]}, "ClickToCopy2"]}, 
           "RowDefault"], BaseStyle -> {"SummaryEmbed"}, 
          BaselinePosition -> (Center -> Center), 
          ImageMargins -> {{7, 0}, {0, 0}}]}, "RowDefault"], Active -> False, 
       BaseStyle -> {"DialogStyle"}, ButtonFunction :> {}, DefaultBaseStyle -> 
       "SummaryEmbedButton", Evaluator -> None, Method -> "Preemptive"]},
     "SummaryEmbedGrid"],
    DynamicModuleValues:>{}], "]"}],
  ReleaseHold[
   Import[
    LocalObject[
    "file:///C:/Users/Sun/AppData/Roaming/Wolfram/Objects/2c0dedc2-bc8d-4948-\
a995-2699cdeac470"], "MX"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{
  3.912637682242571*^9, {3.9126380693038073`*^9, 3.9126380729700813`*^9}, 
   3.9126382540741453`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"80da9bb8-a5d2-475c-83be-f9626db8d3d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", "[", 
   RowBox[{"\"\<The best thing about AI is its ability to\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<TopProbabilities\>\"", ",", "5"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"ReverseSort", "[", 
    RowBox[{"Association", "[", "%", "]"}], "]"}], ",", 
   RowBox[{"ItemDisplayFunction", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PercentForm", "[", 
       RowBox[{"#", ",", "2"}], "]"}], "&"}], ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.912637780701209*^9, 3.9126378079218407`*^9}, 
   3.9126378903090267`*^9, {3.912637952253915*^9, 3.9126379729841394`*^9}},
 CellLabel->"In[5]:=",
 CellID->1605084768,ExpressionUUID->"a807cbfb-e33d-4ca4-bdbf-147f6d0653d9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      " learn" -> 0.044531580060720444`, " predict" -> 0.03497511148452759, 
       " make" -> 0.03190697357058525, " understand" -> 0.030780300498008728`,
        " do" -> 0.028851071372628212`|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[60]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        " do", " learn", " make", " predict", " understand"]], 
       TypeSystem`Atom[Real], 5], 
     "Meta" -> <|ItemDisplayFunction -> (PercentForm[#, 2]& )|>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[60]]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        " do", " learn", " make", " predict", " understand"]], 
       TypeSystem`Atom[Real], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" learn", 
                  Style[
                  " learn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[" learn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" learn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               PercentForm[0.044531580060720444`, 2], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" learn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" predict", 
                  Style[
                  " predict", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[" predict"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" predict"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               PercentForm[0.03497511148452759, 2], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" predict"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" make", 
                  Style[
                  " make", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[" make"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" make"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               PercentForm[0.03190697357058525, 2], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" make"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" understand", 
                  Style[
                  " understand", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[" understand"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" understand"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               PercentForm[0.030780300498008728`, 2], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" understand"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[" do", 
                  Style[
                  " do", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[" do"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" do"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               PercentForm[0.028851071372628212`, 2], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[" do"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{192.5, {73.13403328722343, 78.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{192.5, {73.13403328722343, 78.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.912637696288009*^9, {3.912637785278186*^9, 3.912637809398768*^9}, 
   3.9126378911120872`*^9, {3.912637957126829*^9, 3.912637973940875*^9}, 
   3.912638073283415*^9, {3.912638237281034*^9, 3.9126382565563903`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"b0b5878a-141a-49fd-8a65-6e9b28e90c79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"#", ",", 
      RowBox[{"model", "[", 
       RowBox[{"#", ",", "\"\<Decision\>\""}], "]"}]}], "]"}], "&"}], ",", 
   "\"\<The best thing about AI is its ability to\>\"", ",", "7"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883445056973206*^9, 3.883445073844077*^9}, {
  3.883445318570703*^9, 3.883445374159212*^9}, {3.9126378327143893`*^9, 
  3.912637881299286*^9}},
 CellLabel->"In[7]:=",
 CellID->1694131958,ExpressionUUID->"95dec6f5-169d-49dc-a645-fa2968f13295"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The best thing about AI is its ability to\"\>", 
   ",", "\<\"The best thing about AI is its ability to learn\"\>", 
   ",", "\<\"The best thing about AI is its ability to learn from\"\>", 
   ",", "\<\"The best thing about AI is its ability to learn from \
experience\"\>", 
   ",", "\<\"The best thing about AI is its ability to learn from experience.\
\"\>", ",", "\<\"The best thing about AI is its ability to learn from \
experience. It\"\>", 
   ",", "\<\"The best thing about AI is its ability to learn from experience. \
It's\"\>", 
   ",", "\<\"The best thing about AI is its ability to learn from experience. \
It's not\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.912637836349442*^9, 3.9126378829453087`*^9}, 
   3.912638074052365*^9, 3.9126382980531073`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"f2da66f8-4568-42b4-954c-b26749c6d348"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"ReverseSort", "[", 
      RowBox[{"model", "[", 
       RowBox[{
       "\"\<The best thing about AI is its ability to\>\"", ",", 
        "\"\<Probabilities\>\""}], "]"}], "]"}], ",", "100"}], "]"}], ",", 
   RowBox[{"Frame", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.881889583716097*^9, 3.881889676877836*^9}, {
  3.881889721140429*^9, 3.881889725370192*^9}, {3.883446124842475*^9, 
  3.883446168158059*^9}, {3.883446234515283*^9, 3.883446237200861*^9}, {
  3.883446272331441*^9, 3.883446293893462*^9}, {3.884906785366333*^9, 
  3.8849067857237864`*^9}},
 CellLabel->"In[8]:=",
 CellID->644418337,ExpressionUUID->"19988047-f00d-4033-9d5f-bbc1df691bea"],

Cell[BoxData[
 GraphicsBox[{{}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[2], PointBox[CompressedData["
1:eJw1lAtUkwUUx1FRHnt938f27RsrQTAFhxKYPLVdNMwE8YFFMkjCUAsKFJSC
TEURCDWZpAVqIAbmRDOPCIJ6AcEHRzwDG+YjwY0xNsamEDLkkZ2z7jn33PM7
95x77rmP/4z45DUJk21sbD577f/F/+38Jw3t6Rp7NAWOjC+ep5WO5Yff9253
RNaUygz94efSflWT0v8HljU/JD3+kFF2PGDh/APGlyFokdYvXt+6KZaNk13n
jLAUo9KfVmUpe+rZGBXte26r24SUWpPb1SHjYKoiWPrHSRsomLvjUVQdz1p/
EtjL2E96DDykP7xUeyFxMmz0ruqVuRIY7r/zsnreFIi8kWUaWEvijhPtdXTX
FHBumanfcIPE1ft9JLbZttDvMGwo5lBYUdtB33ljKkzvt+ikLhS6LFsRSJ+Z
Cm2RZX3B5ZS1/2kQM7HEdE9JYcbOkfrEM9Pgb0Fnp5rthPsKEoMyXexAGhug
e9/PCb0u2k7zO2gHVElEV1iuExaoUzMXv7SDFPcb+sY2J7xwLrlwnsweHD1q
epMfOuGtpkXpaVfsQTBr30C+Kx/NF5VjOwQOUHL/ZX+PDx8tXvJvK5IcYHZT
0gvDfL51fg5Q7b3IwPqIj3edzfpCwhE+kn1nTF/Hx0N7p1Q/jXWE+AV8481M
ProvP6KKPu0IteFiE6+Ejy7jd1sCzI7w8Yng3mQLH4tVLEv5Aha8nV+lP+oi
wGhJwbLWr1lwVxzwYk+AABNvVV9rr2GBfuuMQfdoASqr/xx8MMyCGvmgsXaf
AIc4NbtHF7Chwm2sV7xfgE0DvMjoLWzob5Gb7Q4KrPtlQ1VMqHHgBwFevRnU
76Fmw2xT4LOWOwI8HdLY1CziQGdxdbf/IwGqOLmbLREcqBwa6t7TJUDOVt/g
9iwOZDxcq2kZF2DE2YOhCZc4YNkk0Qc70jh30by117UcGKuw1fKcaST7+LSZ
5sITjdwQ7E/jkrWjflOXcuH2aoXWexmNp26XbWelcaEyab96z2tOWnzoKreU
C06qbE3OBzRWmQ95O9/lAhFv/2zlRhq31a5aGDDMBZz2l7r4c9p6nzzIO1bX
dfQbGs+Lz15uC+PBkR8V2nt7aJywWT0Rl8aDQk22YXYpjR/8du7MW8d4MKty
r+mXOhoVC902ezTy4J0DsfrMehrZTg3pKb08aJ6zXt/xgsaB8SvrsuwISA2S
Ge6N0bgqaU7LPyIC2O4l5uJJQlxXVFkq8CIgNOWomecqxBVLm5s0iwgY+XGz
scVHiN943rQkrCQA7g/rB94VYr5vwuPiOAK2+6j6kmOFyEmiDLlbCHC9cEx/
MU+Ihsez93pnEVD0TK6f+FWIYkatK5AT0CindMFXhNb/I0D2PLD31S0hbvMs
PCz/g4ANzVv6GluFWO6+/OE7DQQkltrq8juEOJf0eF6kJOBQzHbj9cdCDGyt
LWnuJOCN6WCU2TFY61x4vMZEgGSDrzHVgcEZIZvyto0T8PPo36Z7bAZvq2YO
vmKTUGzpMj/lMSiNGoyJEJOwURNpkPEZ1Hq7zf/Kk4QHRYq+m84MvqkYVcX4
kxBVJXm+xI/BGLuTReJQEuw5+eawCAYpHTYo1pAg6S4xPXrNC33Dc7hxJNCd
7X2RsQx6RrjzQ78kYWTXjv7G9QymXjiftyqDBN+dgX1lcQy+t+vrMZ8cEg4/
KO5VxzNW/SFhPCNK37ONwYTj5ZMzS0hgK7J1TukMZmniD2jOkqAsr9U8PcDg
/YQhB48aEnJamnsuHmbQsWz4k6VNJPCWxzy7XMbg0qu9X4CShBTlfHVmJYNt
Urmt8AkJgbmZ6kfVDMZtiX11R0dC38qaHpmSwaHvzwljB0lo+jxIz7IwSHj5
iFsnSODnZmpZNiK8FvNW/XQWBeOeet0GrgjTNldcW0lToMDRpzKxCFNUAw2f
zqCgy/1V95LpIvz5ekX6h14U5Lnla9LniFBdN7ZL4k/Bja053flvi3D4lN13
mhAKBmRB6ut+rzms2353OAVVv7dpeUEi/CJtuGpSFAVzc0O6w0CEkjdp0aZP
Kci+FKeVvCey6jMF8ctKtanhIvwXubbyEQ==
      "]]},
    Annotation[#, "Charting`Private`Tag#1"]& ], {{}, {{
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.605170185988092, -6.324660876840513}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" adjust\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " adjust", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.59511985013459, -6.316573714878705}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" develop\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " develop", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.584967478670572, -6.312789518475296}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" reduce\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " reduce", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.574710978503383, -6.306701284989847}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" actually\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " actually", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.564348191467836, -6.3034663681382765`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" grow\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " grow", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.553876891600541, -6.297408663169964}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" integrate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " integrate", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.525149296258015, -6.31390076436102}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923754}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-9.656854249492383, -12.856854249492375`}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-41.65685424949238, -12.856854249492383`}, {
            4.525149296258015, -6.31390076436102}], 
           Offset[{-41.65685424949238, -0.8568542494923825}, {
            4.525149296258015, -6.31390076436102}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" catch\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-25.656854249492383, -6.856854249492379}, \
{4.525149296258015, -6.31390076436102}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.532599493153256, -6.279555886700991}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" outper\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " outper", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.5217885770490405`, -6.276717662622256}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" follow\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " follow", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.51085950651685, -6.264053000728834}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" navigate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " navigate", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.499809670330265, -6.250045396127479}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" map\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " map", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.48863636973214, -6.243209514441735}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" talk\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " talk", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.477336814478207, -6.204452152905997}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" sort\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " sort", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.484053604666572, -6.158098523632337}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{38.656854249492376`, 11.656854249492383`}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{38.65685424949238, 1.6568542494923841`}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{9.656854249492381, 1.656854249492377}, {
            4.484053604666572, -6.158098523632337}], 
           Offset[{9.656854249492378, 11.656854249492376`}, {
            4.484053604666572, -6.158098523632337}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" save\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{24.15685424949238, 6.656854249492381}, \
{4.484053604666572, -6.158098523632337}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.454347296253507, -6.169417905843474}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" explore\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " explore", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.442651256490317, -6.159881150133983}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" look\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " look", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.430816798843313, -6.144240972050176}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" connect\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " connect", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.418840607796598, -6.138549398377749}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" act\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " act", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.406719247264253, -6.116286881597954}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" extract\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " extract", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.394449154672439, -6.11514249953211}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" automatically\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " automatically", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.382026634673881, -6.096572542321286}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" not\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " not", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.3694478524670215`, -6.094375315675096}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" really\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " really", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.356708826689592, -6.0935208572484445`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" let\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " let", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.343805421853684, -6.091140461379856}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" become\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " become", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.330733340286331, -6.07701086444403}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" scale\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " scale", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.31748811353631, -6.076461561667436}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" analyze\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " analyze", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.30406509320417, -6.052993553441033}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" design\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " design", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.290459441148391, -6.0261532764186185`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" have\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " have", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.276666119016055, -6.01988189410722}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" infer\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " infer", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.2626798770413155`, -6.015502704422398}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" \\\"\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " \"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.248495242049359, -6.0125119666910445`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" drive\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " drive", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.23410650459726, -6.009231287193681}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" distinguish\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " distinguish", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            4.2013622191641185`, -6.0296143950814525`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923754}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-9.656854249492381, -12.856854249492375`}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-39.65685424949238, -12.856854249492383`}, {
            4.2013622191641185`, -6.0296143950814525`}], 
           Offset[{-39.65685424949238, -0.8568542494923825}, {
            4.2013622191641185`, -6.0296143950814525`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" track\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-24.656854249492383, -6.856854249492379}, \
{4.2013622191641185, -6.0296143950814525}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.204692619390966, -5.965575895642488}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" turn\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " turn", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.207800228038414, -5.93806685293591}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{55.65685424949238, 12.856854249492386`}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{55.65685424949238, 0.8568542494923861}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{9.656854249492383, 0.8568542494923754}, {
            4.207800228038414, -5.93806685293591}], 
           Offset[{9.656854249492383, 12.856854249492375`}, {
            4.207800228038414, -5.93806685293591}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" combine\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{32.65685424949238, 6.856854249492381}, \
{4.207800228038414, -5.93806685293591}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.174387269895637, -5.951919264263412}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" produce\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " produce", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.1588830833596715`, -5.946273464356945}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" evolve\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " evolve", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.143134726391533, -5.9318691502891765`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" guess\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " guess", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.127134385045092, -5.9121090557242955`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" teach\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " teach", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.110873864173311, -5.884475389302935}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" stay\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " stay", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.0943445622221, -5.841247273038212}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" bring\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " bring", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.07753744390572, -5.811477347791026}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" give\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " give", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.060443010546419, -5.798629483707822}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" answer\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " answer", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            4.061196753846539, -5.7588830207296136`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{32.656854249492376`, 11.656854249492383`}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{32.65685424949238, 1.6568542494923832`}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{9.656854249492381, 1.656854249492378}, {
            4.061196753846539, -5.7588830207296136`}], 
           Offset[{9.656854249492378, 11.656854249492378`}, {
            4.061196753846539, -5.7588830207296136`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" run\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{21.15685424949238, 6.656854249492381}, \
{4.061196753846539, -5.7588830207296136}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{4.02535169073515, -5.751571426176053}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" improve\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " improve", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.989187699220482, -5.770291246739993}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492383, -0.8568542494923737}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-9.656854249492383, -12.856854249492374`}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-53.65685424949238, -12.856854249492384`}, {
            3.989187699220482, -5.770291246739993}], 
           Offset[{-53.65685424949238, -0.8568542494923843}, {
            3.989187699220482, -5.770291246739993}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" manage\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-31.656854249492383, -6.856854249492379}, \
{3.989187699220482, -5.770291246739993}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.9889840465642745`, -5.737151777323282}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" overcome\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " overcome", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.970291913552122, -5.68894926258081}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" discover\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " discover", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.9512437185814275`, -5.68420385596554}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" provide\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " provide", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.9318256327243257`, -5.6573788452598315`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" go\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " go", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.912023005428146, -5.628722767088581}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" play\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " play", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.9099657841226154`, -5.596315660704069}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{41.656854249492376`, 12.856854249492384`}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{41.65685424949238, 0.8568542494923843}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{9.656854249492381, 0.8568542494923772}, {
            3.9099657841226154`, -5.596315660704069}], 
           Offset[{9.65685424949238, 12.856854249492377`}, {
            3.9099657841226154`, -5.596315660704069}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" know\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25.65685424949238, 6.856854249492381}, \
{3.9099657841226154, -5.596315660704069}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.853055524895902, -5.625561520595301}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -1.656854249492377}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-9.656854249492381, -11.656854249492376`}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-33.65685424949238, -11.656854249492383`}, {
            3.853055524895902, -5.625561520595301}], 
           Offset[{-33.65685424949238, -1.6568542494923824`}, {
            3.853055524895902, -5.625561520595301}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" use\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-21.656854249492383, -6.65685424949238}, \
{3.853055524895902, -5.625561520595301}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.8501476017100584`, -5.599914104234372}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" move\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " move", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.828641396489095, -5.571807451885905}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" interact\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " interact", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.8066624897703196`, -5.57081561607917}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" manipulate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " manipulate", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.784189633918261, -5.570495228010665}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" interpret\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " interpret", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.7612001156935624`, -5.553939514961908}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" control\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " control", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.7376696182833684`, -5.525451272997086}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" imagine\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " imagine", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.713572066704308, -5.509994181536961}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" respond\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " respond", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.6888794541139363`, -5.498824660948793}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" mimic\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " mimic", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.6635616461296463`, -5.470229714582882}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" capture\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " capture", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.6194406737143967`, -5.4865082037841155`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923763}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-9.656854249492381, -12.856854249492375`}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-36.65685424949238, -12.856854249492383`}, {
            3.6194406737143967`, -5.4865082037841155`}], 
           Offset[{-36.65685424949238, -0.8568542494923816}, {
            3.6194406737143967`, -5.4865082037841155`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" deal\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-23.156854249492383, -6.856854249492379}, \
{3.6194406737143967, -5.4865082037841155}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.6109179126442243`, -5.448043379579565}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" perform\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " perform", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.58351893845611, -5.3905789445481584`}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" communicate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " communicate", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.5553480614894135`, -5.388702162704233}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" identify\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " identify", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.5263605246161616`, -5.386825233531147}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" read\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " read", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.514653047478469, -5.359148484376964}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{47.65685424949238, 12.856854249492386`}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{47.65685424949238, 0.8568542494923852}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{9.65685424949238, 0.8568542494923763}, {
            3.514653047478469, -5.359148484376964}], 
           Offset[{9.65685424949238, 12.856854249492375`}, {
            3.514653047478469, -5.359148484376964}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" handle\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{28.65685424949238, 6.856854249492381}, \
{3.514653047478469, -5.359148484376964}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.4657359027997265`, -5.338027777234609}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" process\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " process", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.4339872044851463`, -5.305190834688756}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" figure\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " figure", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            3.3830518956501665`, -5.303280739107212}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923754}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-9.656854249492383, -12.856854249492375`}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-41.65685424949238, -12.856854249492383`}, {
            3.3830518956501665`, -5.303280739107212}], 
           Offset[{-41.65685424949238, -0.8568542494923825}, {
            3.3830518956501665`, -5.303280739107212}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" avoid\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-25.656854249492383, -6.856854249492379}, \
{3.3830518956501665, -5.303280739107212}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.367295829986474, -5.243590969337298}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" quickly\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " quickly", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.332204510175204, -5.156310783425563}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" build\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " build", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.295836866004329, -5.120879845007353}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" simulate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " simulate", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.258096538021482, -5.087371550404745}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" automate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " automate", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            3.2370213108801895`, -5.0616020571813785`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{35.656854249492376`, 14.056854249492382`}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{35.65685424949238, 0.056854249492382714`}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{9.656854249492381, 0.056854249492377384`}, {
            3.2370213108801895`, -5.0616020571813785`}], 
           Offset[{9.656854249492378, 14.056854249492378`}, {
            3.2370213108801895`, -5.0616020571813785`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" pick\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{22.65685424949238, 7.05685424949238}, \
{3.2370213108801895, -5.0616020571813785}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.1780538303479458`, -5.050704753769685}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" come\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " come", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.1354942159291497`, -5.048736318470361}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" get\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " get", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.091042453358316, -5.031783871710577}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" tell\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " tell", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{3.044522437723423, -4.963317539144564}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" anticipate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " anticipate", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.977586787542002, -4.978253274078217}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.05685424949237561}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-9.656854249492381, -14.056854249492375`}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-39.65685424949238, -14.056854249492382`}, {
            2.977586787542002, -4.978253274078217}], 
           Offset[{-39.65685424949238, -0.056854249492382714`}, {
            2.977586787542002, -4.978253274078217}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" keep\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-24.656854249492383, -7.056854249492379}, \
{2.977586787542002, -4.978253274078217}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{2.9444389791664403`, -4.883101959632784}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" generate\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " generate", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}}, 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{2.8903717578961645`, -4.803008678856087}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" recognize\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " recognize", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, {
             LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, Background -> 
              GrayLevel[1, 0.65], FrameStyle -> None, FrameMargins -> 2, 
              BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.851358830068205, -4.740160252359951}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{36.656854249492376`, 14.056854249492382`}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{36.65685424949238, 0.056854249492382714`}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{9.656854249492381, 0.056854249492377384`}, {
            2.851358830068205, -4.740160252359951}], 
           Offset[{9.656854249492378, 14.056854249492378`}, {
            2.851358830068205, -4.740160252359951}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" help\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{23.15685424949238, 7.05685424949238}, \
{2.851358830068205, -4.740160252359951}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.754443236227792, -4.727322554992426}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923754}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-9.656854249492381, -12.856854249492375`}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-38.65685424949238, -12.856854249492383`}, {
            2.754443236227792, -4.727322554992426}], 
           Offset[{-38.65685424949238, -0.8568542494923825}, {
            2.754443236227792, -4.727322554992426}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" think\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-24.156854249492383, -6.856854249492379}, \
{2.754443236227792, -4.727322554992426}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{2.70805020110221, -4.662337968319621}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" see\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " see", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.6209118436032695`, -4.552945019867922}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923754}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-9.656854249492381, -12.856854249492375`}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-38.65685424949238, -12.856854249492383`}, {
            2.6209118436032695`, -4.552945019867922}], 
           Offset[{-38.65685424949238, -0.8568542494923825}, {
            2.6209118436032695`, -4.552945019867922}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" work\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-24.156854249492383, -6.856854249492379}, \
{2.6209118436032695, -4.552945019867922}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{2.5649493574615367`, -4.51329010678681}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" change\"", LabelStyle -> {}, Background -> None, 
             ContentPadding -> False, LabelStyle -> {}, Frame -> True, 
             RoundingRadius -> 4, Background -> GrayLevel[1, 0.65], 
             FrameStyle -> None, FrameMargins -> 2, BaselinePosition -> 
             Automatic, LabelingSize -> DirectedInfinity[1], StripOnInput -> 
             False], FrameMargins -> 0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " change", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.5030521357999893`, -4.419359609219731}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{45.65685424949238, 12.856854249492384`}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{45.65685424949238, 0.8568542494923843}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{9.65685424949238, 0.8568542494923772}, {
            2.5030521357999893`, -4.419359609219731}], 
           Offset[{9.65685424949238, 12.856854249492377`}, {
            2.5030521357999893`, -4.419359609219731}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" detect\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{27.65685424949238, 6.856854249492381}, \
{2.5030521357999893, -4.419359609219731}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], 
      {Opacity[0], 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[2], 
        TagBox[
         TooltipBox[PointBox[{2.3978952727983707`, -4.332961790424707}],
          StyleBox[
           PaneBox[
            FrameBox[
            "\" take\"", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
             Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
             FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
             DirectedInfinity[1], StripOnInput -> False], FrameMargins -> 
            0], {}, StripOnInput -> False]],
         Annotation[#, 
          Style[
           Pane[
            Framed[
            " take", LabelStyle -> {}, Background -> None, ContentPadding -> 
             False, {LabelStyle -> {}, Frame -> True, RoundingRadius -> 4, 
              Background -> GrayLevel[1, 0.65], FrameStyle -> None, 
              FrameMargins -> 2, BaselinePosition -> Automatic, LabelingSize -> 
              DirectedInfinity[1]}], FrameMargins -> 0], {}], "Tooltip"]& ]}},
       GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{3., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{8., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{10., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{12., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{12., 0.}, {2.3282466854080517`, -4.0316006200263015`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{3., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{8., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{10., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{12., 0.}, {2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{12., 0.}, {2.3282466854080517`, -4.0316006200263015`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{48., 6.0000000000000036`}, {
            2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{48., -5.9999999999999964`}, {
            2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{12., -6.0000000000000036`}, {
            2.3282466854080517`, -4.0316006200263015`}], 
           Offset[{12., 5.9999999999999964`}, {
            2.3282466854080517`, -4.0316006200263015`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" create\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{30., 0.}, {2.3282466854080517, -4.0316006200263015}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            2.1790790913242306`, -4.012616123045028}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492385, -0.8568542494923763}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-9.656854249492381, -12.856854249492375`}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-33.65685424949238, -12.856854249492383`}, {
            2.1790790913242306`, -4.012616123045028}], 
           Offset[{-33.65685424949238, -0.8568542494923816}, {
            2.1790790913242306`, -4.012616123045028}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" find\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-21.656854249492383, -6.856854249492379}, \
{2.1790790913242306, -4.012616123045028}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            2.0975870276918247`, -3.944536664828423}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{42.65685424949238, 14.056854249492384`}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{42.65685424949238, 0.0568542494923836}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{9.65685424949238, 0.056854249492376496`}, {
            2.0975870276918247`, -3.944536664828423}], 
           Offset[{9.65685424949238, 14.056854249492376`}, {
            2.0975870276918247`, -3.944536664828423}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" adapt\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{26.15685424949238, 7.05685424949238}, \
{2.0975870276918247, -3.944536664828423}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            1.964055635067302, -3.6474175692311985`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{41.656854249492376`, 12.856854249492384`}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{41.65685424949238, 0.8568542494923843}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{9.656854249492381, 0.8568542494923772}, {
            1.964055635067302, -3.6474175692311985`}], 
           Offset[{9.65685424949238, 12.856854249492377`}, {
            1.964055635067302, -3.6474175692311985`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" solve\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25.65685424949238, 6.856854249492381}, \
{1.964055635067302, -3.6474175692311985}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 8.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 10.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.791759469228055, -3.5629627622775955`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 8.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 10.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.791759469228055, -3.5629627622775955`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{9.499999999999998, 24.}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{9.500000000000002, 12.000000000000002`}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{-9.499999999999998, 11.999999999999998`}, {
            1.791759469228055, -3.5629627622775955`}], 
           Offset[{-9.500000000000002, 24.}, {
            1.791759469228055, -3.5629627622775955`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" be\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.}, \
{1.791759469228055, -3.5629627622775955}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {
            1.6094379124341003`, -3.577325828221825}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-5.51091059616309*^-16, -3.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -8.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -10.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{-1.4695761589768238`*^-15, -12.}, {
            1.6094379124341003`, -3.577325828221825}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{9.499999999999996, -11.999999999999998`}, {
            1.6094379124341003`, -3.577325828221825}], 
           Offset[{9.5, -24.}, {1.6094379124341003`, -3.577325828221825}], 
           Offset[{-9.5, -24.}, {1.6094379124341003`, -3.577325828221825}], 
           Offset[{-9.500000000000004, -12.000000000000002`}, {
            1.6094379124341003`, -3.577325828221825}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" do\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-1.4695761589768238*^-15, -18.}, \
{1.6094379124341003, -3.577325828221825}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-2.121320343559643, -2.1213203435596424`}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-5.6568542494923815`, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-7.6568542494923815`, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-9.656854249492381, -5.65685424949238}, {
            1.3681488751079018`, -3.5033081726736865`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-9.656854249492383, -0.8568542494923728}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-9.656854249492383, -12.856854249492372`}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-67.65685424949238, -12.856854249492386`}, {
            1.3681488751079018`, -3.5033081726736865`}], 
           Offset[{-67.65685424949238, -0.8568542494923852}, {
            1.3681488751079018`, -3.5033081726736865`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" understand\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-38.65685424949238, -6.856854249492379}, \
{1.3681488751079018, -3.5033081726736865}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 8.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 10.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.0986122886681098`, -3.4132130083834493`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{1.8369701987210297`*^-16, 3.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 8.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 10.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{4.898587196589413*^-16, 12.}, {
            1.0986122886681098`, -3.4132130083834493`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{16.5, 24.000000000000004`}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{16.5, 12.000000000000004`}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{-16.5, 11.999999999999996`}, {
            1.0986122886681098`, -3.4132130083834493`}], 
           Offset[{-16.5, 23.999999999999996`}, {
            1.0986122886681098`, -3.4132130083834493`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" make\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{4.898587196589413*^-16, 18.}, \
{1.0986122886681098, -3.4132130083834493}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-8., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-10., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-12., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-12., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{-3., 3.6739403974420594`*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-8., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-10., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-12., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-12., 9.797174393178826*^-16}, {
            0.6674855881459394, -3.3531185708866347`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{-12., 7.000000000000005}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-12., -6.999999999999995}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-50., -7.0000000000000036`}, {
            0.6674855881459394, -3.3531185708866347`}], 
           Offset[{-50., 6.9999999999999964`}, {
            0.6674855881459394, -3.3531185708866347`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" predict\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{-31., 9.797174393178826*^-16}, \
{0.6674855881459394, -3.3531185708866347}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{2.121320343559643, 2.121320343559643}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{5.656854249492381, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{7.65685424949238, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{9.65685424949238, 5.656854249492381}, {
            0.0181454860119888, -3.0891288923937763`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{40.656854249492376`, 12.856854249492384`}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{40.65685424949238, 0.8568542494923843}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{9.656854249492381, 0.8568542494923772}, {
            0.0181454860119888, -3.0891288923937763`}], 
           Offset[{9.656854249492378, 12.856854249492377`}, {
            0.0181454860119888, -3.0891288923937763`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\" learn\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{25.15685424949238, 6.856854249492381}, \
{0.0181454860119888, -3.0891288923937763}], NCache[
         ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
          ImageScaled[{0.5, 0.5}]]]}]}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.1938808628649496, -6.576104514923365},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
      Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-6.214608098422191, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.002\"", ShowStringCharacters -> False], 
           0.002`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.005\"", ShowStringCharacters -> False], 
           0.005`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.010\"", ShowStringCharacters -> False], 
           0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.020\"", ShowStringCharacters -> False], 
           0.02`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.050\"", ShowStringCharacters -> False], 
           0.05`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
        0.}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.502290170873972, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.199705077879927, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}, {{-6.214608098422191, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-6.502290170873972, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.809142990314028, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.199705077879927, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}, {{{
       0., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
        FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
        FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.995732273553991, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.4011973816621555`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.6888794541139363`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.0943445622221, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.248495242049359, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.382026634673881, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.499809670330265, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.703782474656201, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.991464547107982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.214608098422191, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.396929655216146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.551080335043404, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.684611727667927, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.802394763324311, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.907755278982137, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
       0., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       2.302585092994046, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       3.912023005428146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
       4.605170185988092, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.995732273553991, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.4011973816621555`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       3.6888794541139363`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.0943445622221, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.248495242049359, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.382026634673881, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       4.499809670330265, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.703782474656201, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       5.991464547107982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.214608098422191, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.396929655216146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.551080335043404, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.684611727667927, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.802394763324311, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       6.907755278982137, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, All}, {All, All}},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.1938808628649496, 
   4.605170185988092}, {-6.576104514923365, -3.111556677216718}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.08]}, {
     Scaled[0.02], 
     Scaled[0.15]}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
     15.954589770191003`, RotateLabel -> 0], 
    Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
     15.954589770191003`, RotateLabel -> 0]}]], "Output",
 CellChangeTimes->{3.9126380053198833`*^9, 3.9126380757171907`*^9, 
  3.9126383219651985`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"3fff2500-605d-4d86-9785-3c15dd324684"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:8bed\:8a00\:6982\:7387", "Chapter",
 CellChangeTimes->{{3.9126384136504097`*^9, 3.9126384191867876`*^9}, {
  3.9128280472608433`*^9, 
  3.912828079464095*^9}},ExpressionUUID->"9265678b-e72e-4809-b4d2-\
b90ac5f42d6f"],

Cell[CellGroupData[{

Cell["\:5b57\:6bcd", "Section",
 CellChangeTimes->{
  3.9126385120862474`*^9},ExpressionUUID->"ee11067b-b13a-4f9f-9520-\
8d20fe073cb2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<Language\>\"", ",", "\"\<English\>\""}], "]"}], ",", 
   RowBox[{"EntityProperty", "[", 
    RowBox[{"\"\<Language\>\"", ",", "\"\<LetterFrequency\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.91283323136607*^9, 3.9128332570996265`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"06ca5e37-8506-4b7f-9613-75fb0c5e6bb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"e\"\>", "\[Rule]", 
    TemplateBox[{
     "12.7019999999999999574`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"t\"\>", "\[Rule]", 
    TemplateBox[{
     "9.0559999999999991616`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", 
    TemplateBox[{
     "8.1669999999999998153`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"o\"\>", "\[Rule]", 
    TemplateBox[{
     "7.5069999999999996732`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"i\"\>", "\[Rule]", 
    TemplateBox[{
     "6.9660000000000001918`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"n\"\>", "\[Rule]", 
    TemplateBox[{"6.748999999999999666`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"s\"\>", "\[Rule]", 
    TemplateBox[{
     "6.3269999999999999574`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"h\"\>", "\[Rule]", 
    TemplateBox[{
     "6.0940000000000003055`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"r\"\>", "\[Rule]", 
    TemplateBox[{
     "5.9870000000000000995`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"d\"\>", "\[Rule]", 
    TemplateBox[{
     "4.2530000000000001137`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"l\"\>", "\[Rule]", 
    TemplateBox[{
     "4.0250000000000003553`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", 
    TemplateBox[{
     "2.7820000000000000284`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"u\"\>", "\[Rule]", 
    TemplateBox[{
     "2.7580000000000000071`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", 
    TemplateBox[{
     "2.4060000000000001386`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"w\"\>", "\[Rule]", 
    TemplateBox[{
     "2.3599999999999998757`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"f\"\>", "\[Rule]", 
    TemplateBox[{
     "2.2280000000000002025`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"g\"\>", "\[Rule]", 
    TemplateBox[{
     "2.0150000000000001243`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    TemplateBox[{
     "1.9739999999999999769`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", 
    TemplateBox[{"1.929000000000000048`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", 
    TemplateBox[{
     "1.4919999999999999929`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"v\"\>", "\[Rule]", 
    TemplateBox[{
     "0.9779999999999999805`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"k\"\>", "\[Rule]", 
    TemplateBox[{
     "0.7720000000000000195`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"j\"\>", "\[Rule]", 
    TemplateBox[{
     "0.1529999999999999971`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    TemplateBox[{
     "0.1499999999999999944`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"q\"\>", "\[Rule]", 
    TemplateBox[{
     "0.0950000000000000011`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}], ",", 
   RowBox[{"\<\"z\"\>", "\[Rule]", 
    TemplateBox[{
     "0.0739999999999999963`3.", "\"%\"", "percent", "\"Percent\""},
     "QuantityPostfix"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9128332625262337`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"58c0422f-df14-4679-8edf-6dfd3af718cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"lang", ",", 
       RowBox[{"BarChart", "[", 
        RowBox[{
         RowBox[{"Normal", "[", 
          RowBox[{"Values", "[", 
           RowBox[{"KeySort", "[", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"EntityValue", "[", 
                RowBox[{
                 RowBox[{"Entity", "[", 
                  RowBox[{"\"\<Language\>\"", ",", "lang"}], "]"}], ",", 
                 RowBox[{"EntityProperty", "[", 
                  RowBox[{
                  "\"\<Language\>\"", ",", "\"\<LetterFrequency\>\""}], 
                  "]"}]}], "]"}], ",", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Not", "@", 
                   RowBox[{"StringContainsQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "#", "]"}], ",", 
                    RowBox[{"Alphabet", "[", "lang", "]"}]}], "]"}]}], "&"}], 
                 ")"}]}]}], "]"}], 
             RowBox[{
             "(*", "\:6392\:9664\:5b57\:6bcd\:8868\:4ee5\:5916\:7684\:5b57\
\:6bcd", "*)"}], ",", 
             RowBox[{"AlphabeticOrder", "[", "lang", "]"}]}], "]"}], "]"}], 
          "]"}], ",", 
         RowBox[{"ChartLabels", "->", 
          RowBox[{"Alphabet", "[", "lang", "]"}]}], ",", 
         RowBox[{"Frame", "->", "True"}], ",", 
         RowBox[{"PlotLabel", "->", "lang"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<English\>\"", ",", "\"\<Spanish\>\"", ",", "\"\<French\>\"", ",", 
       "\"\<German\>\""}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "&"}]}], "//", 
  "GraphicsGrid"}]], "Input",
 CellChangeTimes->{{3.8836078746198273`*^9, 3.883607885225628*^9}, {
   3.8836120475527287`*^9, 3.883612056831826*^9}, {3.884169447721468*^9, 
   3.884169509607442*^9}, {3.88443702717728*^9, 3.884437091594857*^9}, {
   3.884443472037033*^9, 3.8844434787838993`*^9}, {3.88534558012919*^9, 
   3.885345585641403*^9}, {3.9128279456397133`*^9, 3.912828027265833*^9}, {
   3.9128281129713955`*^9, 3.9128281545800333`*^9}, {3.912828434988512*^9, 
   3.9128284759144745`*^9}, {3.9128285303938675`*^9, 3.912828542211136*^9}, {
   3.9128287283908544`*^9, 3.9128288015111513`*^9}, {3.912828974663808*^9, 
   3.9128289782940903`*^9}, {3.9128290186467614`*^9, 3.91282902472773*^9}, {
   3.9128299259178762`*^9, 3.9128300567828436`*^9}, 3.9128301540532727`*^9, {
   3.912830455250704*^9, 3.9128304825807076`*^9}, 3.912830516590553*^9, {
   3.91283099741993*^9, 3.9128310259848123`*^9}, {3.912831135099388*^9, 
   3.9128311464296694`*^9}, 3.912831474678276*^9, {3.912831558928939*^9, 
   3.9128316106187363`*^9}, {3.912831726268995*^9, 3.912831735818716*^9}, 
   3.91283177584873*^9, {3.912832326593789*^9, 3.912832390691641*^9}, 
   3.912832486047385*^9, {3.9128325777723*^9, 3.912832581417468*^9}, 
   3.9128331250962887`*^9, {3.9128331586363*^9, 3.912833192876257*^9}},
 CellID->989946077,ExpressionUUID->"39ddf3af-ef29-4439-b9ea-08041f4fa51f"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{0.10465116279069775`, 0.}, {26.380143112701248`, 
          0.}}]}, {{}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{0.6198568872987478, 0.}, {1.3801431127012522, 0.08166999999999999},
               RoundingRadius->0],
              StatusArea[#, 0.0816699999999999981`3.]& ,
              TagBoxNote->"0.0816699999999999981`3."],
             StyleBox["0.0816699999999999981`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0816699999999999981`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{1.6198568872987478, 0.}, {2.3801431127012522, 0.01492},
               RoundingRadius->0],
              StatusArea[#, 0.0149199999999999999`3.]& ,
              TagBoxNote->"0.0149199999999999999`3."],
             StyleBox["0.0149199999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0149199999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{2.6198568872987478, 0.}, {3.3801431127012522, 0.02782},
               RoundingRadius->0],
              StatusArea[#, 0.0278200000000000003`3.]& ,
              TagBoxNote->"0.0278200000000000003`3."],
             StyleBox["0.0278200000000000003`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0278200000000000003`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{3.6198568872987478, 0.}, {4.380143112701252, 0.04253},
               RoundingRadius->0],
              StatusArea[#, 0.0425300000000000011`3.]& ,
              TagBoxNote->"0.0425300000000000011`3."],
             StyleBox["0.0425300000000000011`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0425300000000000011`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{4.619856887298748, 0.}, {5.380143112701252, 0.12702},
               RoundingRadius->0],
              StatusArea[#, 0.1270199999999999996`3.]& ,
              TagBoxNote->"0.1270199999999999996`3."],
             StyleBox["0.1270199999999999996`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.1270199999999999996`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{5.619856887298748, 0.}, {6.380143112701252, 0.02228},
               RoundingRadius->0],
              StatusArea[#, 0.022280000000000002`3.]& ,
              TagBoxNote->"0.022280000000000002`3."],
             StyleBox["0.022280000000000002`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.022280000000000002`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{6.619856887298748, 0.}, {7.380143112701252, 0.02015},
               RoundingRadius->0],
              StatusArea[#, 0.0201500000000000012`3.]& ,
              TagBoxNote->"0.0201500000000000012`3."],
             StyleBox["0.0201500000000000012`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0201500000000000012`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{7.619856887298748, 0.}, {8.380143112701251, 0.06094},
               RoundingRadius->0],
              StatusArea[#, 0.0609400000000000031`3.]& ,
              TagBoxNote->"0.0609400000000000031`3."],
             StyleBox["0.0609400000000000031`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0609400000000000031`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{8.619856887298747, 0.}, {9.380143112701251, 0.06966},
               RoundingRadius->0],
              StatusArea[#, 0.0696600000000000019`3.]& ,
              TagBoxNote->"0.0696600000000000019`3."],
             StyleBox["0.0696600000000000019`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0696600000000000019`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{9.619856887298747, 0.}, {10.380143112701251, 0.00153},
               RoundingRadius->0],
              StatusArea[#, 0.0015299999999999999`3.]& ,
              TagBoxNote->"0.0015299999999999999`3."],
             StyleBox["0.0015299999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0015299999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{10.619856887298747, 0.}, {11.380143112701251, 0.00772},
               RoundingRadius->0],
              StatusArea[#, 0.0077200000000000002`3.]& ,
              TagBoxNote->"0.0077200000000000002`3."],
             StyleBox["0.0077200000000000002`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0077200000000000002`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{11.619856887298747, 0.}, {12.380143112701251, 0.04025},
               RoundingRadius->0],
              StatusArea[#, 0.0402500000000000035`3.]& ,
              TagBoxNote->"0.0402500000000000035`3."],
             StyleBox["0.0402500000000000035`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0402500000000000035`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{12.619856887298747, 0.}, {13.380143112701251, 0.02406},
               RoundingRadius->0],
              StatusArea[#, 0.0240600000000000014`3.]& ,
              TagBoxNote->"0.0240600000000000014`3."],
             StyleBox["0.0240600000000000014`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0240600000000000014`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{13.619856887298747, 0.}, {14.380143112701251, 0.06749},
               RoundingRadius->0],
              StatusArea[#, 0.0674899999999999967`3.]& ,
              TagBoxNote->"0.0674899999999999967`3."],
             StyleBox["0.0674899999999999967`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0674899999999999967`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{14.619856887298747, 0.}, {15.380143112701251, 0.07507},
               RoundingRadius->0],
              StatusArea[#, 0.0750699999999999968`3.]& ,
              TagBoxNote->"0.0750699999999999968`3."],
             StyleBox["0.0750699999999999968`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0750699999999999968`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{15.619856887298747, 0.}, {16.38014311270125, 0.01929},
               RoundingRadius->0],
              StatusArea[#, 0.0192900000000000005`3.]& ,
              TagBoxNote->"0.0192900000000000005`3."],
             StyleBox["0.0192900000000000005`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0192900000000000005`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{16.619856887298745, 0.}, {17.380143112701248, 0.00095},
               RoundingRadius->0],
              StatusArea[#, 0.00095`3.]& ,
              TagBoxNote->"0.00095`3."],
             StyleBox["0.00095`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00095`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{17.619856887298745, 0.}, {18.380143112701248, 0.05987},
               RoundingRadius->0],
              StatusArea[#, 0.059870000000000001`3.]& ,
              TagBoxNote->"0.059870000000000001`3."],
             StyleBox["0.059870000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.059870000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{18.619856887298745, 0.}, {19.380143112701248, 0.06326999999999999},
               RoundingRadius->0],
              StatusArea[#, 0.0632699999999999996`3.]& ,
              TagBoxNote->"0.0632699999999999996`3."],
             StyleBox["0.0632699999999999996`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0632699999999999996`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{19.619856887298745, 0.}, {20.380143112701248, 0.09055999999999999},
               RoundingRadius->0],
              StatusArea[#, 0.0905599999999999916`3.]& ,
              TagBoxNote->"0.0905599999999999916`3."],
             StyleBox["0.0905599999999999916`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0905599999999999916`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{20.619856887298745, 0.}, {21.380143112701248, 0.02758},
               RoundingRadius->0],
              StatusArea[#, 0.0275800000000000001`3.]& ,
              TagBoxNote->"0.0275800000000000001`3."],
             StyleBox["0.0275800000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0275800000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{21.619856887298745, 0.}, {22.380143112701248, 0.00978},
               RoundingRadius->0],
              StatusArea[#, 0.0097799999999999998`3.]& ,
              TagBoxNote->"0.0097799999999999998`3."],
             StyleBox["0.0097799999999999998`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0097799999999999998`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{22.619856887298745, 0.}, {23.380143112701248, 0.0236},
               RoundingRadius->0],
              StatusArea[#, 0.0235999999999999987`3.]& ,
              TagBoxNote->"0.0235999999999999987`3."],
             StyleBox["0.0235999999999999987`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0235999999999999987`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{23.619856887298745, 0.}, {24.380143112701248, 0.0015},
               RoundingRadius->0],
              StatusArea[#, 0.0014999999999999999`3.]& ,
              TagBoxNote->"0.0014999999999999999`3."],
             StyleBox["0.0014999999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0014999999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{24.619856887298745, 0.}, {25.380143112701248, 0.01974},
               RoundingRadius->0],
              StatusArea[#, 0.0197399999999999998`3.]& ,
              TagBoxNote->"0.0197399999999999998`3."],
             StyleBox["0.0197399999999999998`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0197399999999999998`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{25.619856887298745, 0.}, {26.380143112701248, 0.00074},
               RoundingRadius->0],
              StatusArea[#, 0.00074`3.]& ,
              TagBoxNote->"0.00074`3."],
             StyleBox["0.00074`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00074`3., {}], 
             "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.10465116279069775`, 0.},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
            FormBox["\"a\"", TraditionalForm], 0}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox["\"b\"", TraditionalForm], 0}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox["\"c\"", TraditionalForm], 0}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox["\"d\"", TraditionalForm], 0}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox["\"e\"", TraditionalForm], 0}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox["\"f\"", TraditionalForm], 0}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox["\"g\"", TraditionalForm], 0}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox["\"h\"", TraditionalForm], 0}, {9., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
            FormBox["\"i\"", TraditionalForm], 0}, {10., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
            FormBox["\"j\"", TraditionalForm], 0}, {11., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
            FormBox["\"k\"", TraditionalForm], 0}, {12., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
            FormBox["\"l\"", TraditionalForm], 0}, {13., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
            FormBox["\"m\"", TraditionalForm], 0}, {14., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
            FormBox["\"n\"", TraditionalForm], 0}, {15., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
            FormBox["\"o\"", TraditionalForm], 0}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox["\"p\"", TraditionalForm], 0}, {16.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           16.999999999999996`, 
            FormBox["\"q\"", TraditionalForm], 0}, {17.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           17.999999999999996`, 
            FormBox["\"r\"", TraditionalForm], 0}, {18.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           18.999999999999996`, 
            FormBox["\"s\"", TraditionalForm], 0}, {19.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           19.999999999999996`, 
            FormBox["\"t\"", TraditionalForm], 0}, {20.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           20.999999999999996`, 
            FormBox["\"u\"", TraditionalForm], 0}, {21.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           21.999999999999996`, 
            FormBox["\"v\"", TraditionalForm], 0}, {22.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           22.999999999999996`, 
            FormBox["\"w\"", TraditionalForm], 0}, {23.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           23.999999999999996`, 
            FormBox["\"x\"", TraditionalForm], 0}, {24.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           24.999999999999996`, 
            FormBox["\"y\"", TraditionalForm], 0}, {25.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           25.999999999999996`, 
            FormBox["\"z\"", TraditionalForm], 0}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           16.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           17.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           18.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           19.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           20.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           21.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           22.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           23.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           24.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           25.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{22.462889850139618`, 0.5000000000000568}, {14.171875, 
        3.}},
       PlotLabel->FormBox["\"English\"", TraditionalForm],
       PlotRange->{{All, All}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {None, 
          Scaled[0.05]}},
       Ticks->{None, Automatic}], {192., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{0.08944543828264762, 0.}, {27.375533232420533`, 
          0.}}]}, {{}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511], 
          Thickness[Small]}], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{0.6244667675794688, 0.}, {1.3755332324205312, 0.11525},
               RoundingRadius->0],
              StatusArea[#, 0.1152500000000000035`3.]& ,
              TagBoxNote->"0.1152500000000000035`3."],
             StyleBox["0.1152500000000000035`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.1152500000000000035`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{1.6244667675794688, 0.}, {2.375533232420531, 0.02215},
               RoundingRadius->0],
              StatusArea[#, 0.0221499999999999986`3.]& ,
              TagBoxNote->"0.0221499999999999986`3."],
             StyleBox["0.0221499999999999986`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0221499999999999986`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{2.624466767579469, 0.}, {3.375533232420531, 0.040190000000000003},
               RoundingRadius->0],
              StatusArea[#, 0.0401900000000000013`3.]& ,
              TagBoxNote->"0.0401900000000000013`3."],
             StyleBox["0.0401900000000000013`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0401900000000000013`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{3.624466767579469, 0.}, {4.375533232420532, 0.0501},
               RoundingRadius->0],
              StatusArea[#, 0.0500999999999999979`3.]& ,
              TagBoxNote->"0.0500999999999999979`3."],
             StyleBox["0.0500999999999999979`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0500999999999999979`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{4.624466767579469, 0.}, {5.375533232420532, 0.12180999999999999},
               RoundingRadius->0],
              StatusArea[#, 0.1218099999999999916`3.]& ,
              TagBoxNote->"0.1218099999999999916`3."],
             StyleBox["0.1218099999999999916`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.1218099999999999916`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{5.624466767579469, 0.}, {6.375533232420532, 0.006919999999999999},
               RoundingRadius->0],
              StatusArea[#, 0.0069199999999999995`3.]& ,
              TagBoxNote->"0.0069199999999999995`3."],
             StyleBox["0.0069199999999999995`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0069199999999999995`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{6.624466767579469, 0.}, {7.375533232420532, 0.01768},
               RoundingRadius->0],
              StatusArea[#, 0.0176800000000000002`3.]& ,
              TagBoxNote->"0.0176800000000000002`3."],
             StyleBox["0.0176800000000000002`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0176800000000000002`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{7.624466767579469, 0.}, {8.375533232420532, 0.00703},
               RoundingRadius->0],
              StatusArea[#, 0.0070299999999999996`3.]& ,
              TagBoxNote->"0.0070299999999999996`3."],
             StyleBox["0.0070299999999999996`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0070299999999999996`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{8.62446676757947, 0.}, {9.375533232420533, 0.06247},
               RoundingRadius->0],
              StatusArea[#, 0.0624699999999999988`3.]& ,
              TagBoxNote->"0.0624699999999999988`3."],
             StyleBox["0.0624699999999999988`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0624699999999999988`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{9.62446676757947, 0.}, {10.375533232420533, 0.00493},
               RoundingRadius->0],
              StatusArea[#, 0.0049299999999999999`3.]& ,
              TagBoxNote->"0.0049299999999999999`3."],
             StyleBox["0.0049299999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0049299999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{10.62446676757947, 0.}, {11.375533232420533, 0.00011000000000000002},
               RoundingRadius->0],
              StatusArea[#, 0.00011`3.]& ,
              TagBoxNote->"0.00011`3."],
             StyleBox["0.00011`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00011`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{11.62446676757947, 0.}, {12.375533232420533, 0.04967},
               RoundingRadius->0],
              StatusArea[#, 0.0496699999999999964`3.]& ,
              TagBoxNote->"0.0496699999999999964`3."],
             StyleBox["0.0496699999999999964`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0496699999999999964`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{12.62446676757947, 0.}, {13.375533232420533, 0.03157},
               RoundingRadius->0],
              StatusArea[#, 0.0315700000000000003`3.]& ,
              TagBoxNote->"0.0315700000000000003`3."],
             StyleBox["0.0315700000000000003`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0315700000000000003`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{13.62446676757947, 0.}, {14.375533232420533, 0.06712},
               RoundingRadius->0],
              StatusArea[#, 0.0671199999999999974`3.]& ,
              TagBoxNote->"0.0671199999999999974`3."],
             StyleBox["0.0671199999999999974`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0671199999999999974`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{14.62446676757947, 0.}, {15.375533232420533, 0.00311},
               RoundingRadius->0],
              StatusArea[#, 0.00311`3.]& ,
              TagBoxNote->"0.00311`3."],
             StyleBox["0.00311`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00311`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{15.62446676757947, 0.}, {16.375533232420533, 0.08683},
               RoundingRadius->0],
              StatusArea[#, 0.0868299999999999983`3.]& ,
              TagBoxNote->"0.0868299999999999983`3."],
             StyleBox["0.0868299999999999983`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0868299999999999983`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{16.62446676757947, 0.}, {17.375533232420533, 0.025099999999999997},
               RoundingRadius->0],
              StatusArea[#, 0.0250999999999999979`3.]& ,
              TagBoxNote->"0.0250999999999999979`3."],
             StyleBox["0.0250999999999999979`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0250999999999999979`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{17.62446676757947, 0.}, {18.375533232420533, 0.00877},
               RoundingRadius->0],
              StatusArea[#, 0.00877`3.]& ,
              TagBoxNote->"0.00877`3."],
             StyleBox["0.00877`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00877`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{18.62446676757947, 0.}, {19.375533232420533, 0.06871000000000001},
               RoundingRadius->0],
              StatusArea[#, 0.0687100000000000044`3.]& ,
              TagBoxNote->"0.0687100000000000044`3."],
             StyleBox["0.0687100000000000044`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0687100000000000044`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{19.62446676757947, 0.}, {20.375533232420533, 0.07977000000000001},
               RoundingRadius->0],
              StatusArea[#, 0.0797700000000000031`3.]& ,
              TagBoxNote->"0.0797700000000000031`3."],
             StyleBox["0.0797700000000000031`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0797700000000000031`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{20.62446676757947, 0.}, {21.375533232420533, 0.04632},
               RoundingRadius->0],
              StatusArea[#, 0.0463199999999999968`3.]& ,
              TagBoxNote->"0.0463199999999999968`3."],
             StyleBox["0.0463199999999999968`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0463199999999999968`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{21.62446676757947, 0.}, {22.375533232420533, 0.02927},
               RoundingRadius->0],
              StatusArea[#, 0.0292700000000000004`3.]& ,
              TagBoxNote->"0.0292700000000000004`3."],
             StyleBox["0.0292700000000000004`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0292700000000000004`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{22.62446676757947, 0.}, {23.375533232420533, 0.01138},
               RoundingRadius->0],
              StatusArea[#, 0.011379999999999999`3.]& ,
              TagBoxNote->"0.011379999999999999`3."],
             StyleBox["0.011379999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.011379999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{23.62446676757947, 0.}, {24.375533232420533, 0.00017},
               RoundingRadius->0],
              StatusArea[#, 0.00017`3.]& ,
              TagBoxNote->"0.00017`3."],
             StyleBox["0.00017`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00017`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{24.62446676757947, 0.}, {25.375533232420533, 0.00215},
               RoundingRadius->0],
              StatusArea[#, 0.0021499999999999999`3.]& ,
              TagBoxNote->"0.0021499999999999999`3."],
             StyleBox["0.0021499999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0021499999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{25.62446676757947, 0.}, {26.375533232420533, 0.01008},
               RoundingRadius->0],
              StatusArea[#, 0.0100800000000000001`3.]& ,
              TagBoxNote->"0.0100800000000000001`3."],
             StyleBox["0.0100800000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0100800000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.511],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{26.62446676757947, 0.}, {27.375533232420533, 0.0046700000000000005},
               RoundingRadius->0],
              StatusArea[#, 0.0046700000000000003`3.]& ,
              TagBoxNote->"0.0046700000000000003`3."],
             StyleBox["0.0046700000000000003`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0046700000000000003`3., {}], 
             "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.08944543828264762, 0.},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
            FormBox["\"a\"", TraditionalForm], 0}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox["\"b\"", TraditionalForm], 0}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox["\"c\"", TraditionalForm], 0}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox["\"d\"", TraditionalForm], 0}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox["\"e\"", TraditionalForm], 0}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox["\"f\"", TraditionalForm], 0}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox["\"g\"", TraditionalForm], 0}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox["\"h\"", TraditionalForm], 0}, {9.000000000000002, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           9.000000000000002, 
            FormBox["\"i\"", TraditionalForm], 0}, {10.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           10.000000000000002`, 
            FormBox["\"j\"", TraditionalForm], 0}, {11.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           11.000000000000002`, 
            FormBox["\"k\"", TraditionalForm], 0}, {12.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           12.000000000000002`, 
            FormBox["\"l\"", TraditionalForm], 0}, {13.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           13.000000000000002`, 
            FormBox["\"m\"", TraditionalForm], 0}, {14.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           14.000000000000002`, 
            FormBox["\"n\"", TraditionalForm], 0}, {15.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           15.000000000000002`, 
            FormBox["\"\[NTilde]\"", TraditionalForm], 0}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox["\"o\"", TraditionalForm], 0}, {17., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
            FormBox["\"p\"", TraditionalForm], 0}, {18., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
            FormBox["\"q\"", TraditionalForm], 0}, {19., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
            FormBox["\"r\"", TraditionalForm], 0}, {20., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
            FormBox["\"s\"", TraditionalForm], 0}, {21., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {21., 
            FormBox["\"t\"", TraditionalForm], 0}, {22., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
            FormBox["\"u\"", TraditionalForm], 0}, {23., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
            FormBox["\"v\"", TraditionalForm], 0}, {24., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
            FormBox["\"w\"", TraditionalForm], 0}, {25., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
            FormBox["\"x\"", TraditionalForm], 0}, {26., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
            FormBox["\"y\"", TraditionalForm], 0}, {27., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
            FormBox["\"z\"", TraditionalForm], 0}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           9.000000000000002, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           10.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           11.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           12.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           13.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           14.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           15.000000000000002`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {21., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{22.462889850139618`, 0.5000000000000568}, {14.171875, 
        3.}},
       PlotLabel->FormBox["\"Spanish\"", TraditionalForm],
       PlotRange->{{All, All}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {None, 
          Scaled[0.05]}},
       Ticks->{None, Automatic}], {576., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{0.10465116279069775`, 0.}, {26.380143112701248`, 
          0.}}]}, {{}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{0.6198568872987478, 0.}, {1.3801431127012522, 0.07636},
               RoundingRadius->0],
              StatusArea[#, 0.0763600000000000012`3.]& ,
              TagBoxNote->"0.0763600000000000012`3."],
             StyleBox["0.0763600000000000012`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0763600000000000012`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{1.6198568872987478, 0.}, {2.3801431127012522, 0.00901},
               RoundingRadius->0],
              StatusArea[#, 0.0090100000000000002`3.]& ,
              TagBoxNote->"0.0090100000000000002`3."],
             StyleBox["0.0090100000000000002`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0090100000000000002`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{2.6198568872987478, 0.}, {3.3801431127012522, 0.0326},
               RoundingRadius->0],
              StatusArea[#, 0.0325999999999999978`3.]& ,
              TagBoxNote->"0.0325999999999999978`3."],
             StyleBox["0.0325999999999999978`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0325999999999999978`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{3.6198568872987478, 0.}, {4.380143112701252, 0.03669},
               RoundingRadius->0],
              StatusArea[#, 0.0366900000000000004`3.]& ,
              TagBoxNote->"0.0366900000000000004`3."],
             StyleBox["0.0366900000000000004`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0366900000000000004`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{4.619856887298748, 0.}, {5.380143112701252, 0.14715},
               RoundingRadius->0],
              StatusArea[#, 0.1471499999999999986`3.]& ,
              TagBoxNote->"0.1471499999999999986`3."],
             StyleBox["0.1471499999999999986`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.1471499999999999986`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{5.619856887298748, 0.}, {6.380143112701252, 0.010660000000000001},
               RoundingRadius->0],
              StatusArea[#, 0.0106600000000000006`3.]& ,
              TagBoxNote->"0.0106600000000000006`3."],
             StyleBox["0.0106600000000000006`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0106600000000000006`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{6.619856887298748, 0.}, {7.380143112701252, 0.00866},
               RoundingRadius->0],
              StatusArea[#, 0.0086599999999999999`3.]& ,
              TagBoxNote->"0.0086599999999999999`3."],
             StyleBox["0.0086599999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0086599999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{7.619856887298748, 0.}, {8.380143112701251, 0.00737},
               RoundingRadius->0],
              StatusArea[#, 0.0073699999999999999`3.]& ,
              TagBoxNote->"0.0073699999999999999`3."],
             StyleBox["0.0073699999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0073699999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{8.619856887298747, 0.}, {9.380143112701251, 0.07529},
               RoundingRadius->0],
              StatusArea[#, 0.0752899999999999991`3.]& ,
              TagBoxNote->"0.0752899999999999991`3."],
             StyleBox["0.0752899999999999991`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0752899999999999991`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{9.619856887298747, 0.}, {10.380143112701251, 0.00613},
               RoundingRadius->0],
              StatusArea[#, 0.0061299999999999999`3.]& ,
              TagBoxNote->"0.0061299999999999999`3."],
             StyleBox["0.0061299999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0061299999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{10.619856887298747, 0.}, {11.380143112701251, 0.00074},
               RoundingRadius->0],
              StatusArea[#, 0.00074`3.]& ,
              TagBoxNote->"0.00074`3."],
             StyleBox["0.00074`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00074`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{11.619856887298747, 0.}, {12.380143112701251, 0.054560000000000004},
               RoundingRadius->0],
              StatusArea[#, 0.0545600000000000041`3.]& ,
              TagBoxNote->"0.0545600000000000041`3."],
             StyleBox["0.0545600000000000041`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0545600000000000041`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{12.619856887298747, 0.}, {13.380143112701251, 0.029679999999999998},
               RoundingRadius->0],
              StatusArea[#, 0.0296799999999999997`3.]& ,
              TagBoxNote->"0.0296799999999999997`3."],
             StyleBox["0.0296799999999999997`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0296799999999999997`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{13.619856887298747, 0.}, {14.380143112701251, 0.07095},
               RoundingRadius->0],
              StatusArea[#, 0.0709499999999999975`3.]& ,
              TagBoxNote->"0.0709499999999999975`3."],
             StyleBox["0.0709499999999999975`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0709499999999999975`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{14.619856887298747, 0.}, {15.380143112701251, 0.057960000000000005},
               RoundingRadius->0],
              StatusArea[#, 0.0579600000000000026`3.]& ,
              TagBoxNote->"0.0579600000000000026`3."],
             StyleBox["0.0579600000000000026`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0579600000000000026`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{15.619856887298747, 0.}, {16.38014311270125, 0.02521},
               RoundingRadius->0],
              StatusArea[#, 0.0252099999999999991`3.]& ,
              TagBoxNote->"0.0252099999999999991`3."],
             StyleBox["0.0252099999999999991`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0252099999999999991`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{16.619856887298745, 0.}, {17.380143112701248, 0.01362},
               RoundingRadius->0],
              StatusArea[#, 0.013620000000000001`3.]& ,
              TagBoxNote->"0.013620000000000001`3."],
             StyleBox["0.013620000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.013620000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{17.619856887298745, 0.}, {18.380143112701248, 0.06692999999999999},
               RoundingRadius->0],
              StatusArea[#, 0.0669299999999999962`3.]& ,
              TagBoxNote->"0.0669299999999999962`3."],
             StyleBox["0.0669299999999999962`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0669299999999999962`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{18.619856887298745, 0.}, {19.380143112701248, 0.07948000000000001},
               RoundingRadius->0],
              StatusArea[#, 0.079480000000000004`3.]& ,
              TagBoxNote->"0.079480000000000004`3."],
             StyleBox["0.079480000000000004`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.079480000000000004`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{19.619856887298745, 0.}, {20.380143112701248, 0.07244},
               RoundingRadius->0],
              StatusArea[#, 0.0724399999999999977`3.]& ,
              TagBoxNote->"0.0724399999999999977`3."],
             StyleBox["0.0724399999999999977`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0724399999999999977`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{20.619856887298745, 0.}, {21.380143112701248, 0.06311},
               RoundingRadius->0],
              StatusArea[#, 0.0631099999999999994`3.]& ,
              TagBoxNote->"0.0631099999999999994`3."],
             StyleBox["0.0631099999999999994`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0631099999999999994`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{21.619856887298745, 0.}, {22.380143112701248, 0.01838},
               RoundingRadius->0],
              StatusArea[#, 0.0183800000000000008`3.]& ,
              TagBoxNote->"0.0183800000000000008`3."],
             StyleBox["0.0183800000000000008`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0183800000000000008`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{22.619856887298745, 0.}, {23.380143112701248, 0.00049},
               RoundingRadius->0],
              StatusArea[#, 0.00049`3.]& ,
              TagBoxNote->"0.00049`3."],
             StyleBox["0.00049`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00049`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{23.619856887298745, 0.}, {24.380143112701248, 0.0042699999999999995},
               RoundingRadius->0],
              StatusArea[#, 0.0042699999999999999`3.]& ,
              TagBoxNote->"0.0042699999999999999`3."],
             StyleBox["0.0042699999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0042699999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{24.619856887298745, 0.}, {25.380143112701248, 0.00128},
               RoundingRadius->0],
              StatusArea[#, 0.0012800000000000001`3.]& ,
              TagBoxNote->"0.0012800000000000001`3."],
             StyleBox["0.0012800000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0012800000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{25.619856887298745, 0.}, {26.380143112701248, 0.00326},
               RoundingRadius->0],
              StatusArea[#, 0.0032600000000000001`3.]& ,
              TagBoxNote->"0.0032600000000000001`3."],
             StyleBox["0.0032600000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0032600000000000001`3., {}], 
             "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.10465116279069775`, 0.},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
            FormBox["\"a\"", TraditionalForm], 0}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox["\"b\"", TraditionalForm], 0}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox["\"c\"", TraditionalForm], 0}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox["\"d\"", TraditionalForm], 0}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox["\"e\"", TraditionalForm], 0}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox["\"f\"", TraditionalForm], 0}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox["\"g\"", TraditionalForm], 0}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox["\"h\"", TraditionalForm], 0}, {9., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
            FormBox["\"i\"", TraditionalForm], 0}, {10., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
            FormBox["\"j\"", TraditionalForm], 0}, {11., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
            FormBox["\"k\"", TraditionalForm], 0}, {12., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
            FormBox["\"l\"", TraditionalForm], 0}, {13., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
            FormBox["\"m\"", TraditionalForm], 0}, {14., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
            FormBox["\"n\"", TraditionalForm], 0}, {15., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
            FormBox["\"o\"", TraditionalForm], 0}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox["\"p\"", TraditionalForm], 0}, {16.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           16.999999999999996`, 
            FormBox["\"q\"", TraditionalForm], 0}, {17.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           17.999999999999996`, 
            FormBox["\"r\"", TraditionalForm], 0}, {18.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           18.999999999999996`, 
            FormBox["\"s\"", TraditionalForm], 0}, {19.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           19.999999999999996`, 
            FormBox["\"t\"", TraditionalForm], 0}, {20.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           20.999999999999996`, 
            FormBox["\"u\"", TraditionalForm], 0}, {21.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           21.999999999999996`, 
            FormBox["\"v\"", TraditionalForm], 0}, {22.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           22.999999999999996`, 
            FormBox["\"w\"", TraditionalForm], 0}, {23.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           23.999999999999996`, 
            FormBox["\"x\"", TraditionalForm], 0}, {24.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           24.999999999999996`, 
            FormBox["\"y\"", TraditionalForm], 0}, {25.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           25.999999999999996`, 
            FormBox["\"z\"", TraditionalForm], 0}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           16.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           17.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           18.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           19.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           20.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           21.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           22.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           23.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           24.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           25.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{22.462889850139618`, 0.5000000000000568}, {14.171875, 
        3.}},
       PlotLabel->FormBox["\"French\"", TraditionalForm],
       PlotRange->{{All, All}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {None, 
          Scaled[0.05]}},
       Ticks->{None, Automatic}], {192., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{0.10465116279069775`, 0.}, {26.380143112701248`, 
          0.}}]}, {{}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518], 
          Thickness[Small]}], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{0.6198568872987478, 0.}, {1.3801431127012522, 0.06516},
               RoundingRadius->0],
              StatusArea[#, 0.0651600000000000001`3.]& ,
              TagBoxNote->"0.0651600000000000001`3."],
             StyleBox["0.0651600000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0651600000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{1.6198568872987478, 0.}, {2.3801431127012522, 0.01886},
               RoundingRadius->0],
              StatusArea[#, 0.018859999999999999`3.]& ,
              TagBoxNote->"0.018859999999999999`3."],
             StyleBox["0.018859999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.018859999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{2.6198568872987478, 0.}, {3.3801431127012522, 0.02732},
               RoundingRadius->0],
              StatusArea[#, 0.0273200000000000021`3.]& ,
              TagBoxNote->"0.0273200000000000021`3."],
             StyleBox["0.0273200000000000021`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0273200000000000021`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{3.6198568872987478, 0.}, {4.380143112701252, 0.05076},
               RoundingRadius->0],
              StatusArea[#, 0.0507599999999999963`3.]& ,
              TagBoxNote->"0.0507599999999999963`3."],
             StyleBox["0.0507599999999999963`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0507599999999999963`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{4.619856887298748, 0.}, {5.380143112701252, 0.16396},
               RoundingRadius->0],
              StatusArea[#, 0.163960000000000008`3.]& ,
              TagBoxNote->"0.163960000000000008`3."],
             StyleBox["0.163960000000000008`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.163960000000000008`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{5.619856887298748, 0.}, {6.380143112701252, 0.01656},
               RoundingRadius->0],
              StatusArea[#, 0.0165599999999999991`3.]& ,
              TagBoxNote->"0.0165599999999999991`3."],
             StyleBox["0.0165599999999999991`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0165599999999999991`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{6.619856887298748, 0.}, {7.380143112701252, 0.03009},
               RoundingRadius->0],
              StatusArea[#, 0.030089999999999999`3.]& ,
              TagBoxNote->"0.030089999999999999`3."],
             StyleBox["0.030089999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.030089999999999999`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{7.619856887298748, 0.}, {8.380143112701251, 0.04577},
               RoundingRadius->0],
              StatusArea[#, 0.0457699999999999996`3.]& ,
              TagBoxNote->"0.0457699999999999996`3."],
             StyleBox["0.0457699999999999996`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0457699999999999996`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{8.619856887298747, 0.}, {9.380143112701251, 0.0655},
               RoundingRadius->0],
              StatusArea[#, 0.0654999999999999982`3.]& ,
              TagBoxNote->"0.0654999999999999982`3."],
             StyleBox["0.0654999999999999982`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0654999999999999982`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{9.619856887298747, 0.}, {10.380143112701251, 0.00268},
               RoundingRadius->0],
              StatusArea[#, 0.0026800000000000001`3.]& ,
              TagBoxNote->"0.0026800000000000001`3."],
             StyleBox["0.0026800000000000001`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0026800000000000001`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{10.619856887298747, 0.}, {11.380143112701251, 0.01417},
               RoundingRadius->0],
              StatusArea[#, 0.0141700000000000004`3.]& ,
              TagBoxNote->"0.0141700000000000004`3."],
             StyleBox["0.0141700000000000004`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0141700000000000004`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{11.619856887298747, 0.}, {12.380143112701251, 0.03437},
               RoundingRadius->0],
              StatusArea[#, 0.0343699999999999983`3.]& ,
              TagBoxNote->"0.0343699999999999983`3."],
             StyleBox["0.0343699999999999983`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0343699999999999983`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{12.619856887298747, 0.}, {13.380143112701251, 0.025339999999999998},
               RoundingRadius->0],
              StatusArea[#, 0.0253399999999999981`3.]& ,
              TagBoxNote->"0.0253399999999999981`3."],
             StyleBox["0.0253399999999999981`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0253399999999999981`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{13.619856887298747, 0.}, {14.380143112701251, 0.09776},
               RoundingRadius->0],
              StatusArea[#, 0.097759999999999998`3.]& ,
              TagBoxNote->"0.097759999999999998`3."],
             StyleBox["0.097759999999999998`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.097759999999999998`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{14.619856887298747, 0.}, {15.380143112701251, 0.025939999999999998},
               RoundingRadius->0],
              StatusArea[#, 0.0259399999999999986`3.]& ,
              TagBoxNote->"0.0259399999999999986`3."],
             StyleBox["0.0259399999999999986`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0259399999999999986`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{15.619856887298747, 0.}, {16.38014311270125, 0.0067},
               RoundingRadius->0],
              StatusArea[#, 0.0067000000000000004`3.]& ,
              TagBoxNote->"0.0067000000000000004`3."],
             StyleBox["0.0067000000000000004`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0067000000000000004`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{16.619856887298745, 0.}, {17.380143112701248, 0.00017999999999999998},
               RoundingRadius->0],
              StatusArea[#, 0.00018`3.]& ,
              TagBoxNote->"0.00018`3."],
             StyleBox["0.00018`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00018`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{17.619856887298745, 0.}, {18.380143112701248, 0.07003},
               RoundingRadius->0],
              StatusArea[#, 0.0700300000000000012`3.]& ,
              TagBoxNote->"0.0700300000000000012`3."],
             StyleBox["0.0700300000000000012`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0700300000000000012`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{18.619856887298745, 0.}, {19.380143112701248, 0.0727},
               RoundingRadius->0],
              StatusArea[#, 0.0726999999999999957`3.]& ,
              TagBoxNote->"0.0726999999999999957`3."],
             StyleBox["0.0726999999999999957`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0726999999999999957`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{19.619856887298745, 0.}, {20.380143112701248, 0.06154},
               RoundingRadius->0],
              StatusArea[#, 0.0615399999999999992`3.]& ,
              TagBoxNote->"0.0615399999999999992`3."],
             StyleBox["0.0615399999999999992`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0615399999999999992`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{20.619856887298745, 0.}, {21.380143112701248, 0.04166},
               RoundingRadius->0],
              StatusArea[#, 0.0416600000000000037`3.]& ,
              TagBoxNote->"0.0416600000000000037`3."],
             StyleBox["0.0416600000000000037`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0416600000000000037`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{21.619856887298745, 0.}, {22.380143112701248, 0.00846},
               RoundingRadius->0],
              StatusArea[#, 0.0084599999999999997`3.]& ,
              TagBoxNote->"0.0084599999999999997`3."],
             StyleBox["0.0084599999999999997`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0084599999999999997`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{22.619856887298745, 0.}, {23.380143112701248, 0.01921},
               RoundingRadius->0],
              StatusArea[#, 0.0192100000000000004`3.]& ,
              TagBoxNote->"0.0192100000000000004`3."],
             StyleBox["0.0192100000000000004`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.0192100000000000004`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{23.619856887298745, 0.}, {24.380143112701248, 0.00034},
               RoundingRadius->0],
              StatusArea[#, 0.00034`3.]& ,
              TagBoxNote->"0.00034`3."],
             StyleBox["0.00034`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00034`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{24.619856887298745, 0.}, {25.380143112701248, 0.00039},
               RoundingRadius->0],
              StatusArea[#, 0.00039`3.]& ,
              TagBoxNote->"0.00039`3."],
             StyleBox["0.00039`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.00039`3., {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.518],
            Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[RectangleBox[{25.619856887298745, 0.}, {26.380143112701248, 0.01134},
               RoundingRadius->0],
              StatusArea[#, 0.011339999999999999`3.]& ,
              TagBoxNote->"0.011339999999999999`3."],
             StyleBox["0.011339999999999999`3.", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[0.011339999999999999`3., {}], 
             "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.10465116279069775`, 0.},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )},
       DisplayFunction->Identity,
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
            FormBox["\"a\"", TraditionalForm], 0}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox["\"b\"", TraditionalForm], 0}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox["\"c\"", TraditionalForm], 0}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox["\"d\"", TraditionalForm], 0}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox["\"e\"", TraditionalForm], 0}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox["\"f\"", TraditionalForm], 0}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox["\"g\"", TraditionalForm], 0}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox["\"h\"", TraditionalForm], 0}, {9., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
            FormBox["\"i\"", TraditionalForm], 0}, {10., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
            FormBox["\"j\"", TraditionalForm], 0}, {11., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
            FormBox["\"k\"", TraditionalForm], 0}, {12., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
            FormBox["\"l\"", TraditionalForm], 0}, {13., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
            FormBox["\"m\"", TraditionalForm], 0}, {14., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
            FormBox["\"n\"", TraditionalForm], 0}, {15., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
            FormBox["\"o\"", TraditionalForm], 0}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox["\"p\"", TraditionalForm], 0}, {16.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           16.999999999999996`, 
            FormBox["\"q\"", TraditionalForm], 0}, {17.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           17.999999999999996`, 
            FormBox["\"r\"", TraditionalForm], 0}, {18.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           18.999999999999996`, 
            FormBox["\"s\"", TraditionalForm], 0}, {19.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           19.999999999999996`, 
            FormBox["\"t\"", TraditionalForm], 0}, {20.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           20.999999999999996`, 
            FormBox["\"u\"", TraditionalForm], 0}, {21.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           21.999999999999996`, 
            FormBox["\"v\"", TraditionalForm], 0}, {22.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           22.999999999999996`, 
            FormBox["\"w\"", TraditionalForm], 0}, {23.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           23.999999999999996`, 
            FormBox["\"x\"", TraditionalForm], 0}, {24.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           24.999999999999996`, 
            FormBox["\"y\"", TraditionalForm], 0}, {25.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           25.999999999999996`, 
            FormBox["\"z\"", TraditionalForm], 0}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           16.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           17.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           18.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           19.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           20.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           21.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           22.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           23.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           24.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
           25.999999999999996`, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{22.462889850139618`, 0.5000000000000568}, {14.171875, 
        3.}},
       PlotLabel->FormBox["\"German\"", TraditionalForm],
       PlotRange->{{All, All}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {None, 
          Scaled[0.05]}},
       Ticks->{None, Automatic}], {576., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[445]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.9126384840831823`*^9, 3.912827948377426*^9, {3.912827999570343*^9, 
   3.912828029462441*^9}, 3.912828165016116*^9, 3.9128284587371187`*^9, 
   3.912828551234702*^9, {3.9128287878154573`*^9, 3.9128288043621473`*^9}, 
   3.9128289896174603`*^9, 3.9128290352542706`*^9, 3.9128299741041*^9, 
   3.912830495180746*^9, 3.912830526940363*^9, 3.91283103397987*^9, {
   3.9128311397344723`*^9, 3.9128311505394955`*^9}, {3.9128323699028435`*^9, 
   3.9128323792277837`*^9}, 3.9128324943878975`*^9, 3.9128325863472056`*^9, 
   3.912833134106205*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"69ec90cd-4411-412f-85d2-006992054c71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5b57\:6bcd\:5bf9", "Section",
 CellChangeTimes->{{3.912638519067794*^9, 
  3.912638519813036*^9}},ExpressionUUID->"79d10095-ddbf-48fb-9e2b-\
b07e678e7ba4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", "=", 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"Association", "AssociationIcon", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["Association", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["26", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["113816", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]},
           "IconizedObject"]],
         <|{
           "a"} -> <|{"a"} -> 1.4175233208361955`*^-6, {"b"} -> 
            0.005201165643001813, {"c"} -> 0.008954539496598014, {"d"} -> 
            0.007759258464173111, {"e"} -> 0.00004764792253771855, {"f"} -> 
            0.001547070911701219, {"g"} -> 0.004184172156217537, {"h"} -> 
            0.00004570232456325258, {"i"} -> 0.006922932378331933, {"j"} -> 
            0.00022956117552568714`, {"k"} -> 0.0021386390994983444`, {"l"} -> 
            0.02178321088963215, {"m"} -> 0.004545035231788629, {"n"} -> 
            0.04499456230550793, {"o"} -> 0.00004243062712962705, {"p"} -> 
            0.0037693828877095647`, {"q"} -> 0.000027759754584551907`, {"r"} -> 
            0.02146588434528123, {"s"} -> 0.01980487478677395, {"t"} -> 
            0.032701423032912125`, {"u"} -> 0.0019273014108104646`, {"v"} -> 
            0.004706139138076959, {"w"} -> 0.00118328578317443, {"x"} -> 
            0.0004244800307790654, {"y"} -> 0.004726680248931997, {"z"} -> 
            0.00013337840554166435`|>, {
           "b"} -> <|{"a"} -> 0.002722445393212862, {"b"} -> 
            0.00011110692755214574`, {"c"} -> 0.000018487539480321277`, {"d"} -> 
            0.000044094013230002165`, {"e"} -> 0.013685936918008318`, {"f"} -> 
            1.3466384645534502`*^-6, {"g"} -> 2.6266334587175894`*^-6, {"h"} -> 
            4.187915651855157*^-6, {"i"} -> 0.0019051111421036035`, {"j"} -> 
            0.0004253745581131223, {"k"} -> 1.732290367523973*^-8, {"l"} -> 
            0.005175351619653036, {"m"} -> 0.000054446556772484095`, {"n"} -> 
            0.000018511483999776112`, {"o"} -> 0.0037270167016538874`, {"p"} -> 
            2.9253937450057446`*^-6, {"r"} -> 0.0015084064438539964`, {"s"} -> 
            0.0008737300391128545, {"t"} -> 0.00030945394419735844`, {"u"} -> 
            0.003483878835205636, {"v"} -> 0.00007469363959523673, {"w"} -> 
            2.6791853611317516`*^-6, {"y"} -> 0.005232807321550585|>, {
           "c"} -> <|{"a"} -> 0.009542533715376994, {"c"} -> 
            0.0017256529407187473`, {"d"} -> 2.8631621337954314`*^-6, {"e"} -> 
            0.013451167713738957`, {"h"} -> 0.010846014968264095`, {"i"} -> 
            0.005036359147089904, {"k"} -> 0.0020906880263042173`, {"l"} -> 
            0.00271773373792685, {"m"} -> 3.3147639252577393`*^-7, {"n"} -> 
            3.769821289971486*^-6, {"o"} -> 0.015435185829536317`, {"q"} -> 
            0.00012864747214506089`, {"r"} -> 0.002871275959513615, {"s"} -> 
            0.0002338960893800382, {"t"} -> 0.009886856859217957, {"u"} -> 
            0.0031681730412013226`, {"y"} -> 0.0009192846272530384, {"z"} -> 
            1.412595445146065*^-6|>, {
           "d"} -> <|{"a"} -> 0.0029239587717277294`, {"b"} -> 
            0.000035641990158400455`, {"c"} -> 0.00002278130888985673, {"d"} -> 
            0.0007581540478428619, {"e"} -> 0.015188064183767036`, {"f"} -> 
            0.00003763993618555238, {"g"} -> 0.0005837129599034475, {"h"} -> 
            0.00004075557654033975, {"i"} -> 0.009563703649234308, {"j"} -> 
            0.00011337399080778192`, {"k"} -> 4.164835253151152*^-6, {"l"} -> 
            0.0006395624032188275, {"m"} -> 0.0003246595713102647, {"n"} -> 
            0.00009715964999689537, {"o"} -> 0.0036167689076522106`, {"p"} -> 
            0.000017305193343778793`, {"q"} -> 
            0.000015899372078916558`, {"r"} -> 0.0013114475412415354`, {"s"} -> 
            0.001042208337366352, {"t"} -> 0.000045379034705834933`, {"u"} -> 
            0.002993484439254798, {"v"} -> 0.00039892913391676555`, {"w"} -> 
            0.00008327603608663153, {"y"} -> 0.0010846921378004576`, {"z"} -> 
            1.2136681190768454`*^-7|>, {
           "e"} -> <|{"a"} -> 0.014461587468335643`, {"b"} -> 
            0.00039667055563835527`, {"c"} -> 0.010673185710765278`, {"d"} -> 
            0.020441141888324382`, {"e"} -> 0.0082867518154873, {"f"} -> 
            0.0036224152224511056`, {"g"} -> 0.0021436147007062264`, {"h"} -> 
            0.0004588351548046846, {"i"} -> 0.0040197885973810715`, {"j"} -> 
            0.00008180293531749412, {"k"} -> 0.0002423505051738059, {"l"} -> 
            0.010204836270917117`, {"m"} -> 0.006895108073642087, {"n"} -> 
            0.028335134676973475`, {"o"} -> 0.0012551251973276197`, {"p"} -> 
            0.003289452337446039, {"q"} -> 0.0013954083768787568`, {"r"} -> 
            0.04087153136606059, {"s"} -> 0.015584517124847583`, {"t"} -> 
            0.007924554426665235, {"u"} -> 0.0002337744684463671, {"v"} -> 
            0.005060956459379051, {"w"} -> 0.0017619216468673926`, {"x"} -> 
            0.004178792069767953, {"y"} -> 0.0025780440941305964`, {"z"} -> 
            0.00003537453122630755|>, {
           "f"} -> <|{"a"} -> 0.0032083436394510726`, {"b"} -> 
            4.796146467390051*^-7, {"c"} -> 1.1447769944245098`*^-6, {"d"} -> 
            5.338903914688511*^-7, {"e"} -> 0.004575451195109288, {"f"} -> 
            0.0031481662707465836`, {"g"} -> 8.345933199903087*^-8, {"h"} -> 
            7.971736103528111*^-7, {"i"} -> 0.006082293850595424, {"j"} -> 
            3.514257674756284*^-7, {"l"} -> 0.001151332150481034, {"n"} -> 
            6.3347261960773394`*^-6, {"o"} -> 0.012380870289478124`, {"p"} -> 
            5.103242840923857*^-7, {"r"} -> 0.004754444847952423, {"s"} -> 
            0.000029384807275969354`, {"t"} -> 0.0017200508763965307`, {"u"} -> 
            0.002308334754945505, {"w"} -> 3.881411172424742*^-6, {"y"} -> 
            0.00021448889915268767`|>, {
           "g"} -> <|{"a"} -> 0.002531047280910783, {"b"} -> 
            2.613516440022871*^-6, {"c"} -> 4.027825575678827*^-8, {"d"} -> 
            0.00002446842894866574, {"e"} -> 0.007146244188027649, {"f"} -> 
            0.00001842163441743286, {"g"} -> 0.0003382395334348341, {"h"} -> 
            0.004566132568136474, {"i"} -> 0.0028453067851045306`, {"j"} -> 
            6.70508266035589*^-8, {"l"} -> 0.0008707250257515528, {"m"} -> 
            0.00019425368639213532`, {"n"} -> 0.0013599914953147298`, {"o"} -> 
            0.0019344668667547796`, {"p"} -> 1.3821414926611944`*^-6, {"r"} -> 
            0.003777426817914145, {"s"} -> 0.0005620772446149785, {"t"} -> 
            0.0002450219222625518, {"u"} -> 0.001158495352047354, {"w"} -> 
            2.1769267133122723`*^-6, {"y"} -> 0.00045377764226366775`, {"z"} -> 
            8.839703818432079*^-7|>, {
           "h"} -> <|{"a"} -> 0.021381550199858823`, {"b"} -> 
            0.00004083894899340429, {"c"} -> 9.366984444068915*^-6, {"d"} -> 
            0.0000489160539607742, {"e"} -> 0.07292595892791905, {"f"} -> 
            0.00004379046698348381, {"g"} -> 6.979177343941352*^-7, {"h"} -> 
            9.000011441453552*^-6, {"i"} -> 0.016088000509262422`, {"k"} -> 
            8.686862363514587*^-8, {"l"} -> 0.0002455508460776724, {"m"} -> 
            0.00017773345480468479`, {"n"} -> 0.00024628548600422, {"o"} -> 
            0.00862992294021285, {"p"} -> 5.9394335129053984`*^-6, {"q"} -> 
            6.783075523431178*^-6, {"r"} -> 0.0015832206989432704`, {"s"} -> 
            0.000023628536989471523`, {"t"} -> 0.002490268375493864, {"u"} -> 
            0.0010071385385063084`, {"w"} -> 0.00008902200628930208, {"y"} -> 
            0.0008323897594277947, {"z"} -> 4.160677198915845*^-8|>, {
           "i"} -> <|{"a"} -> 0.004135184290484227, {"b"} -> 
            0.0018768357248018458`, {"c"} -> 0.014108576208885597`, {"d"} -> 
            0.006652768519139828, {"e"} -> 0.004515863665643169, {"f"} -> 
            0.004182736321204933, {"g"} -> 0.005025426152275801, {"h"} -> 
            0.000020402820880430503`, {"i"} -> 1.5744618648585173`*^-6, {"j"} -> 
            3.6987190382615537`*^-6, {"k"} -> 0.000893713005621343, {"l"} -> 
            0.008575648612897491, {"m"} -> 0.006771428981711899, {"n"} -> 
            0.052487829943796555`, {"o"} -> 0.01783339839749002, {"p"} -> 
            0.0016230590911387901`, {"q"} -> 0.00018570882737976976`, {"r"} -> 
            0.006642999864552617, {"s"} -> 0.02356024768488627, {"t"} -> 
            0.023729154170193695`, {"u"} -> 0.00029838476694685006`, {"v"} -> 
            0.005736823590790045, {"w"} -> 2.0148319838443117`*^-6, {"x"} -> 
            0.0004830649389773881, {"y"} -> 9.576956867518898*^-8, {"z"} -> 
            0.0011681060954975057`|>, {
           "j"} -> <|{"a"} -> 0.0000883359909857798, {"e"} -> 
            0.0007013416947700839, {"i"} -> 5.531084474824783*^-6, {"j"} -> 
            9.43224291135183*^-8, {"o"} -> 0.0006224838095852041, {"u"} -> 
            0.0011413371383722686`|>, {
           "k"} -> <|{"a"} -> 0.00013894844972966983`, {"b"} -> 
            8.807485518276305*^-6, {"c"} -> 2.558035770325525*^-6, {"d"} -> 
            0.000012994293646619683`, {"e"} -> 0.0036086820603695897`, {"f"} -> 
            0.000023868131856477196`, {"g"} -> 0.00003741667101334247, {"h"} -> 
            8.02261203583321*^-6, {"i"} -> 0.0017020032430373896`, {"j"} -> 
            2.9572125386620093`*^-7, {"k"} -> 2.798068175663215*^-6, {"l"} -> 
            0.00016175459798407007`, {"m"} -> 0.000012009263888906168`, {"n"} -> 
            0.0010171285590629064`, {"o"} -> 0.000015229431239915447`, {"p"} -> 
            0.000013077741165409567`, {"r"} -> 
            0.000021391233727666194`, {"s"} -> 0.0002362004686667416, {"t"} -> 
            0.000010048052804441925`, {"u"} -> 0.00001795933514032891, {"v"} -> 
            9.730327885101897*^-9, {"w"} -> 0.00003546427267927213, {"y"} -> 
            0.00007293113379065416|>, {
           "l"} -> <|{"a"} -> 0.009615569160108448, {"b"} -> 
            0.00003555120036509265, {"c"} -> 0.00020699902795451357`, {"d"} -> 
            0.0023029864127445242`, {"e"} -> 0.015565304260667467`, {"f"} -> 
            0.001117805267228737, {"g"} -> 0.0000718600393159219, {"h"} -> 
            4.504999046432312*^-6, {"i"} -> 0.011289149569083232`, {"j"} -> 
            2.2794269444036848`*^-8, {"k"} -> 0.0003432976210949164, {"l"} -> 
            0.011445694139428045`, {"m"} -> 0.00035670126317609047`, {"n"} -> 
            0.00007676289036311588, {"o"} -> 0.007231316712508515, {"p"} -> 
            0.00030248310914669763`, {"q"} -> 5.825727471979484*^-8, {"r"} -> 
            0.0002380360128930694, {"s"} -> 0.0013692552202660096`, {"t"} -> 
            0.002124309154328498, {"u"} -> 0.0025588879261817, {"v"} -> 
            0.0006434129793494012, {"w"} -> 0.0002671799248272123, {"y"} -> 
            0.010078246389459485`|>, {
           "m"} -> <|{"a"} -> 0.010860275589233595`, {"b"} -> 
            0.0014408875923017112`, {"c"} -> 3.0994301821663915`*^-6, {"d"} -> 
            3.5120646127702404`*^-7, {"e"} -> 0.015273920516569728`, {"f"} -> 
            0.0000753017689007504, {"h"} -> 1.97037473458336*^-6, {"i"} -> 
            0.005854247255490072, {"j"} -> 1.2428639567070936`*^-7, {"k"} -> 
            2.0114022055596028`*^-8, {"l"} -> 0.000057856120342271375`, {"m"} -> 
            0.0016782632663658525`, {"n"} -> 0.00011822923062664781`, {"o"} -> 
            0.006591872872866401, {"p"} -> 0.004843522979676726, {"q"} -> 
            2.406454833979099*^-8, {"r"} -> 3.4207956732619456`*^-6, {"s"} -> 
            0.000963947502829385, {"t"} -> 7.892391903418932*^-6, {"u"} -> 
            0.0023074768196231802`, {"v"} -> 1.7517024083517088`*^-6, {"w"} -> 
            2.9917715282299224`*^-6, {"y"} -> 0.0012346945815332397`|>, {
           "n"} -> <|{"a"} -> 0.006086993454590367, {"b"} -> 
            0.00003259619243904397, {"c"} -> 0.008107944637331343, {"d"} -> 
            0.034147753429687254`, {"e"} -> 0.01300428489875227, {"f"} -> 
            0.0013820705080956042`, {"g"} -> 0.019090848204420148`, {"h"} -> 
            0.00015536914541879418`, {"i"} -> 0.005541756531440219, {"j"} -> 
            0.00020150587410628566`, {"k"} -> 0.0009751280405275031, {"l"} -> 
            0.0014982149066773945`, {"m"} -> 0.0004853259378405034, {"n"} -> 
            0.001253758596851344, {"o"} -> 0.010429576457826158`, {"p"} -> 
            0.00011754698740374865`, {"q"} -> 0.00008766179162545713, {"r"} -> 
            0.00009055008072877679, {"s"} -> 0.006423752350770922, {"t"} -> 
            0.021513788894594103`, {"u"} -> 0.0018375308761081118`, {"v"} -> 
            0.0009992783775175282, {"w"} -> 0.0000872033362072285, {"x"} -> 
            0.000046171979606943756`, {"y"} -> 0.002471200826462096, {"z"} -> 
            0.000038122769110532415`|>, {
           "o"} -> <|{"a"} -> 0.0012170912004802622`, {"b"} -> 
            0.0014680724840491037`, {"c"} -> 0.0027410465459843996`, {"d"} -> 
            0.0032353199365605274`, {"e"} -> 0.0005969628143612416, {"f"} -> 
            0.03464633184927203, {"g"} -> 0.0016050310916001904`, {"h"} -> 
            0.00011259817078916183`, {"i"} -> 0.0018190196380008814`, {"j"} -> 
            0.00014518487354490722`, {"k"} -> 0.0008295898106144301, {"l"} -> 
            0.006041909176838289, {"m"} -> 0.011447431123612385`, {"n"} -> 
            0.03719042184058369, {"o"} -> 0.0037152196060725295`, {"p"} -> 
            0.0045463976247657484`, {"q"} -> 0.00001475793940478242, {"r"} -> 
            0.024927732706314938`, {"s"} -> 0.0059008679712352465`, {"t"} -> 
            0.009963176686540757, {"u"} -> 0.0159124190640615, {"v"} -> 
            0.004035253550218757, {"w"} -> 0.006617815332674707, {"x"} -> 
            0.00032970497365061255`, {"y"} -> 0.0006360011763451065, {"z"} -> 
            0.00005223672815423725|>, {
           "p"} -> <|{"a"} -> 0.0061156827214604425`, {"b"} -> 
            9.771924678148389*^-6, {"c"} -> 3.7414232354946405`*^-6, {"d"} -> 
            9.393692898880684*^-6, {"e"} -> 0.009852287872840267, {"f"} -> 
            0.000024430935194394108`, {"g"} -> 3.571703760817429*^-6, {"h"} -> 
            0.001315664080836775, {"i"} -> 0.002063905643263224, {"j"} -> 
            1.4412354131349569`*^-8, {"k"} -> 4.458716735388336*^-6, {"l"} -> 
            0.005398545320659236, {"m"} -> 0.00039678677416562136`, {"n"} -> 
            0.00001650077610292833, {"o"} -> 0.007579274649302089, {"p"} -> 
            0.002913643118423637, {"r"} -> 0.009773969811232332, {"s"} -> 
            0.00045996728072401585`, {"t"} -> 0.0018848732041793605`, {"u"} -> 
            0.0021637240521080988`, {"w"} -> 0.000029347677030235574`, {"y"} -> 
            0.000248602827278368|>, {
           "q"} -> <|{"u"} -> 0.0030608527832387215`|>, {
           "r"} -> <|{"a"} -> 0.01311708684050764, {"b"} -> 
            0.00042943373691772737`, {"c"} -> 0.002097622872538642, {"d"} -> 
            0.0034912605782881968`, {"e"} -> 0.038676648013920206`, {"f"} -> 
            0.0006736675624122305, {"g"} -> 0.0017532690235446558`, {"h"} -> 
            0.00021222224631645454`, {"i"} -> 0.011916525866814544`, {"j"} -> 
            3.838199739126826*^-6, {"k"} -> 0.001680332057448618, {"l"} -> 
            0.0014742377610511503`, {"m"} -> 0.003520118731308458, {"n"} -> 
            0.002688566225155741, {"o"} -> 0.015044142514414821`, {"p"} -> 
            0.0008101223140135694, {"q"} -> 8.064387066017781*^-6, {"r"} -> 
            0.0019685861803993227`, {"s"} -> 0.0044725717909202475`, {"t"} -> 
            0.007288182880776828, {"u"} -> 0.002234271387536933, {"v"} -> 
            0.0014458176418916753`, {"w"} -> 0.00023678829797112242`, {"y"} -> 
            0.005350678748532976, {"z"} -> 7.308383984064552*^-7|>, {
           "s"} -> <|{"a"} -> 0.004461514875131864, {"b"} -> 
            0.00008283380608493026, {"c"} -> 0.002552907396134392, {"d"} -> 
            0.00009121678667214613, {"e"} -> 0.018717091199593985`, {"f"} -> 
            0.00039037859321709235`, {"g"} -> 0.000029128664067007173`, {"h"} -> 
            0.004473085040003533, {"i"} -> 0.011162322270463385`, {"j"} -> 
            2.5989183140731108`*^-6, {"k"} -> 0.0005498962177385114, {"l"} -> 
            0.000990776567066753, {"m"} -> 0.0011465510273565706`, {"n"} -> 
            0.0001310804147688233, {"o"} -> 0.007441995178814392, {"p"} -> 
            0.003879887911746778, {"q"} -> 0.00011301168958872745`, {"r"} -> 
            0.0000486710166803399, {"s"} -> 0.007843933716089881, {"t"} -> 
            0.019852383384150372`, {"u"} -> 0.006697913402466394, {"v"} -> 
            0.000013417858030656464`, {"w"} -> 0.0003437816741009898, {"y"} -> 
            0.0009301694968900875|>, {
           "t"} -> <|{"a"} -> 0.010346763059434386`, {"b"} -> 
            0.00003609740109848928, {"c"} -> 0.0003888404733026763, {"d"} -> 
            0.000014049893104231355`, {"e"} -> 0.02307775210957383, {"f"} -> 
            0.00011557488342982272`, {"g"} -> 0.00004786776823147136, {"h"} -> 
            0.08798067150264571, {"i"} -> 0.0270522912731261, {"j"} -> 
            1.5929128334325151`*^-7, {"k"} -> 1.331088677134689*^-7, {"l"} -> 
            0.0022113614441993533`, {"m"} -> 0.0005282582591179308, {"n"} -> 
            0.00016135510495525403`, {"o"} -> 0.02586114421560647, {"p"} -> 
            0.0000769144798775371, {"r"} -> 0.008151394454886558, {"s"} -> 
            0.002486623631485542, {"t"} -> 0.0031764264312788403`, {"u"} -> 
            0.0045135737733845134`, {"v"} -> 9.435251914720831*^-7, {"w"} -> 
            0.0020131861510037053`, {"y"} -> 0.005166793651560422, {"z"} -> 
            0.00001623929923816173|>, {
           "u"} -> <|{"a"} -> 0.0026818052702692685`, {"b"} -> 
            0.0019184444085331238`, {"c"} -> 0.004132670423735259, {"d"} -> 
            0.0015260208354009332`, {"e"} -> 0.002775628091925877, {"f"} -> 
            0.0003834423461855543, {"g"} -> 0.0021287227724513832`, {"h"} -> 
            1.8570589222640496`*^-6, {"i"} -> 0.0021803693787869113`, {"j"} -> 
            1.516658996963412*^-7, {"k"} -> 0.00001595302357747975, {"l"} -> 
            0.004346943349900759, {"m"} -> 0.002839540515021813, {"n"} -> 
            0.007773294292660068, {"o"} -> 0.00018885035516786073`, {"p"} -> 
            0.0031060704533425847`, {"q"} -> 1.1729198074331978`*^-6, {"r"} -> 
            0.010277388095796867`, {"s"} -> 0.009164240075526464, {"t"} -> 
            0.008614437338232406, {"u"} -> 0.000018507731530442617`, {"v"} -> 
            0.00002164513046301895, {"w"} -> 4.15402580015402*^-8, {"x"} -> 
            0.0000442300496730642, {"y"} -> 0.00008505514306661403, {"z"} -> 
            0.00002157177721339343|>, {
           "v"} -> <|{"a"} -> 0.002837545941217049, {"e"} -> 
            0.017703531502739553`, {"i"} -> 0.0052771690639759955`, {"l"} -> 
            1.2208751182642588`*^-8, {"n"} -> 9.152819691958337*^-9, {"o"} -> 
            0.001096456551777909, {"r"} -> 9.507418516166228*^-7, {"u"} -> 
            0.00002847037298495024, {"v"} -> 8.28273903707159*^-7, {"y"} -> 
            0.00010448748636763688`|>, {
           "w"} -> <|{"a"} -> 0.008766804010229869, {"b"} -> 
            0.000012514534403702055`, {"c"} -> 2.5345493636231287`*^-6, {"d"} -> 
            0.00006676551646204968, {"e"} -> 0.007260793738464163, {"f"} -> 
            0.000043998652277639475`, {"g"} -> 5.113414505442718*^-7, {"h"} -> 
            0.008923021937374992, {"i"} -> 0.009577342047460267, {"j"} -> 
            9.675402862003131*^-9, {"k"} -> 0.000010580101123616307`, {"l"} -> 
            0.00030261524412866477`, {"m"} -> 7.194761503566332*^-6, {"n"} -> 
            0.001651805950591037, {"o"} -> 0.003368471457881732, {"p"} -> 
            7.665579118010096*^-6, {"r"} -> 0.000491653090021647, {"s"} -> 
            0.00011211363775677278`, {"t"} -> 0.00014420016884444736`, {"u"} -> 
            1.370287151604545*^-7, {"w"} -> 1.2601881012060255`*^-7, {"y"} -> 
            0.00002427033894237398, {"z"} -> 3.058492548299493*^-8|>, {
           "x"} -> <|{"a"} -> 0.0005108568678204347, {"b"} -> 
            6.393339433374925*^-8, {"c"} -> 0.0006482113565320765, {"e"} -> 
            0.00037884866302084633`, {"f"} -> 6.931842318957476*^-7, {"g"} -> 
            9.960642908271101*^-8, {"h"} -> 0.00007184520376981519, {"i"} -> 
            0.0007418262496870431, {"l"} -> 4.461526372211281*^-6, {"m"} -> 
            2.7297061016733922`*^-8, {"n"} -> 6.774613712783254*^-8, {"o"} -> 
            0.00001996806558344459, {"p"} -> 0.001298379481756828, {"q"} -> 
            6.2210630723932294`*^-6, {"s"} -> 1.284317792466631*^-7, {"t"} -> 
            0.0010494997351254759`, {"u"} -> 0.00003080435878894507, {"w"} -> 
            2.249983748693501*^-7, {"y"} -> 0.00004718793274873364|>, {
           "y"} -> <|{"a"} -> 0.00016863972134981988`, {"b"} -> 
            0.00007751640538454556, {"c"} -> 0.00016379423171909133`, {"d"} -> 
            0.00009160265156996764, {"e"} -> 0.002267117065382276, {"f"} -> 
            0.000010237252633000623`, {"g"} -> 0.00005059743261196511, {"h"} -> 
            7.183355044153533*^-6, {"i"} -> 0.000518600467908177, {"k"} -> 
            4.573346890317861*^-8, {"l"} -> 0.0001646025130094336, {"m"} -> 
            0.0004297762236728827, {"n"} -> 0.00016600735607624447`, {"o"} -> 
            0.003081028728910725, {"p"} -> 0.00036874089293225526`, {"r"} -> 
            0.00007684520027384155, {"s"} -> 0.001581147565718653, {"t"} -> 
            0.00027191184095225055`, {"u"} -> 3.2217312254915303`*^-6, {"w"} -> 
            0.000059253176584332975`, {"x"} -> 3.350311095929651*^-6, {"z"} -> 
            0.00002998001195421881|>, {
           "z"} -> <|{"a"} -> 0.00037563285473324716`, {"d"} -> 
            9.632868557942677*^-8, {"e"} -> 0.0009395684761105248, {"i"} -> 
            0.00010065955675383539`, {"k"} -> 1.1811270648266713`*^-7, {"l"} -> 
            0.000023674478543617256`, {"m"} -> 1.5405166876875038`*^-8, {"o"} -> 
            0.00010093684994531103`, {"p"} -> 9.9323526861342*^-8, {"u"} -> 
            8.518051707998928*^-6, {"v"} -> 1.7485295068413326`*^-6, {"w"} -> 
            1.2471180358694593`*^-7, {"y"} -> 0.000038883898638143364`, {"z"} -> 
            0.00004353450962809642|>|>,
         SelectWithContents->True,
         Selectable->False]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{
           RowBox[{"Lookup", "[", 
            RowBox[{"data", ",", 
             RowBox[{"Key", "@", 
              RowBox[{"{", "#1", "}"}]}]}], "]"}], ",", 
           RowBox[{"Key", "@", 
            RowBox[{"{", "#2", "}"}]}], ",", "0"}], "]"}], "&"}], ",", 
        RowBox[{"Alphabet", "[", "]"}], ",", 
        RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "#"}], "}"}]}], "}"}]}], "&"}], "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"FromLetterNumber", "[", "i", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "26"}], "}"}]}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "->", 
    RowBox[{
     InterpretationBox[
      TagBox[
       FrameBox[
        PaneBox[GridBox[{
           {
            StyleBox[
             StyleBox[
              AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
               BoxBaselineShift->-0.25,
               BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
              FontColor->GrayLevel[0.45]],
             ShowStringCharacters->False,
             FontFamily->"Source Sans Pro Black",
             FontSize->0.65 Inherited,
             FontWeight->"Heavy",
             PrivateFontOptions->{"OperatorSubstitution"->False}], 
            StyleBox[
             RowBox[{
              StyleBox["\<\"ChatTechColors\"\>", "ResourceFunctionLabel"], 
              " "}],
             ShowAutoStyles->False,
             ShowStringCharacters->False,
             FontSize->0.9 Inherited,
             FontColor->GrayLevel[0.1]]}
          },
          GridBoxSpacings->{"Columns" -> {{0.25}}}],
         Alignment->Left,
         BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
         BaselinePosition->Baseline,
         FrameMargins->{{3, 0}, {0, 0}}],
        Background->RGBColor[0.968627, 0.976471, 0.984314],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 1}},
        FrameStyle->RGBColor[0.831373, 0.847059, 0.85098],
        RoundingRadius->4],
       {"FunctionResourceBox", 
        GrayLevel[0.45], "\"ChatTechColors\""},
       TagBoxNote->"FunctionResourceBox"],
      ResourceFunction[
       ResourceObject[<|
        "Name" -> "ChatTechColors", "UUID" -> 
         "e94a8649-0716-452b-8a07-06cee4cfd4e3", "ResourceType" -> "Function",
          "ResourceLocations" -> {
           CloudObject[
           "https://www.wolframcloud.com/obj/sw-writings0/Resources/e94/\
e94a8649-0716-452b-8a07-06cee4cfd4e3"]}, "Version" -> None, 
         "DocumentationLink" -> 
         URL["https://www.wolframcloud.com/obj/sw-writings0/ChatTech/\
ChatTechColors"], "ExampleNotebookData" -> Automatic, "FunctionLocation" -> 
         CloudObject[
          "https://www.wolframcloud.com/obj/sw-writings0/Resources/e94/\
e94a8649-0716-452b-8a07-06cee4cfd4e3/download/DefinitionData"], "ShortName" -> 
         "ChatTechColors", "SymbolName" -> 
         "FunctionRepository`$e94a86490716452b8a0706cee4cfd4e3`\
ChatTechColors"|>]],
      Selectable->False], "[", "\"\<Orange\>\"", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.884687194355629*^9, 3.884687199166394*^9}, {
  3.885345603891958*^9, 3.8853456259862957`*^9}},
 CellLabel->"In[11]:=",
 CellID->1003506593,ExpressionUUID->"4ef81279-9791-4922-8577-ec0c3382527a"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJy1m3lUjO/fxxNFRZs2ZCv6JqJEKfEuJSkipVCkBUWEUCrSIllSEaIs31TS
omgVKu37vu81TTPTNHMTUQnP9Zzz/Dt//M75Pc5xjjPnPtd87uv6fN7v1/u+
x3IHt33HZvLx8S38v7//++/V82YujvhEQWS+pr/Nbwb0FRxXKI53wTa0cFzZ
loLa/O3GPbVcbN9xflKMxcbDZEu+5EsUzG1DK1u+jUKHfcPp0hIm5p/LDVFz
ofC3aZ37CToHmeE7h0TmjmCfwxr6ghcU9oXYvrg+bwT1vjVPP6oP8lx/Un/L
tSB3CoeGElw113Dw4nJh4atwJthrrugNO1DQOL5SXd6KC/Xzz4T2j42A+zO1
tp1DQTNswUa/6CGsmFLk795dzXP9/9bnJrWRv/ReUgjTLw6Z08LC8S+fFc3z
BpDkfsS5OYmCk41wnd1mFk68dIk5FNj/H6/fnFBupXqegkJpH/2IIQfO9FjF
WUVMntfXfxnJ8bhP4VKH4NZBagRDYudSwUf246d5rmskhT1KbzPFH43AmCN6
rMSExnOd0qtz1UPsKfwI1mnfdoYLje3S71IUedf5aHDD9MdnFJoss/W/rhxB
W8wxzRjHQRxVSPwSEEdhvZTZ7IBkFhovHQy4fmoAyQ0LuubNpfC5yUfk78l+
PHx0ZcuifaWQXO0/IMTl4mdl2nquaD8Ebzdtft9disK2mlBxOoX87VF23dp0
lDPz7vx4XQ/3w1uFPEcoPHun3zK7YwibGEXyN3VroStzQWZOGqn/scCHcftB
VN2TUmi2LULCxt+nh0oo9F9RVTvmzIC7+o7GExEdKLErU1vXRvrqd5N+2Pph
HM284Ggc04x5ViGHBGnkfDW9ZFyO0BGzk/5sHxrwkpN0/utxCqvi3v14NY+L
Ru0Wf5MjIzz3R+6DnOWcVAq2Sm+qpmew8G6pw/4FYv1Youd7LkCFC+VsjzUn
znTBa61C7lvHSrAFZb3sKQrOdr/8BfyGMOuwhPeW01X4xnkz4FtAoab2QI5n
xCBcTz9rLhUvwqSRaN6vHgqdpz7lfcqhI36bzdqLaY3Y+xuzuJUUhKJuDyqI
MrAu7Z1BmGI7zzpvH/0ht5PBRUlJoJzb9z6wq1olWL9K0cPHsr1N9p+5fbGk
oTodDnatIm1B9ZDw9tjt8YOL8+omj8uU+zHzvEZvTWYpjk7sWROaTsH9Mkdq
II2JaUWaeEFjL24N0LfdzaFQvX+adsiaifxvNG2WUw8Wj68pWhZFIWfLQfl/
j4+gVXAFfy1jEOWThm+XvKbQo2txnXOKBaWBsDuhDN5ztHC58+0MMo8DSvQf
X6tZKLzt5VqZMoC0C8GrzVoo1Da6/NaxHEZWhmdm9+qW/5oOSH2TFJPQInrF
tXbmcPtRviPpmsftkv/a+j4Br9c9baeg1+RwdUyO9OdbObUn2s3/7/r24XLd
WGIChTwfoaOzL7Dw2DaJkp/oxw2FcaWCWgobe34Lp1QMI/jBedUakbb/93p4
fZ5UQfPb+4qC167YYqM7LJhMzFuZsGrgv7b+o7yZn+WvUfiauN4h1WQUsQH1
8zuKh3lefyhE4I0Vl0LjuHH/2/tD+Ggvrt8lUI2ni1qVfvoQfe7PbJMIGMVE
ppSq6CYGz3WWvl45uJDMUcX2tqxZ75koOO9Yzf+9F6e8rPgGf1NwqP3zS/UK
Da4fljuHLi/CO6VQ/W0BFIp6p7LNJEdx9u7f2FfmwxjMEUkz9CJzsW7W7mPp
o/C1PCFe/YSBK1eOSx3JpHAzX4rpFcZEyViYyCGzXrzrpIc0XKYwbc2vdeHD
KAoDxuUMknjXyX9h/tQd4u82dm9fegiMIOeisteO5YNwOn3D/EwVhTlrJwWU
BRgYiz7M1/unDf5N388VXaUgt1DlSqfDKDQCrFp0fgyjaI9I7swMCgb2Djk5
CUw0qqjwn3zbi31efwxUsojO2JZoLSzrxW8VAe7n3jJYS17zbX1KgS53bs58
zRH4dL09EBnImytY9AeXNMqJbpd9MZ4NBurEcq1t2e0Yvrtvu2I9hYx2t9WN
acOo5wQ5bY5vxZmXh2skiQ7PmVEcbqFIg/Lwtadp2oUQSeHTdSccsu1Z8uxV
R7hodzFoLuPn3T/rn/BF3zxJIf783369Gg5u3wk4nt7JQuX1n+WbT5PzWu/1
cCyag4M2PyT4PFlY0qjntT6FQpbmy2N9CiysDUm6b7KvH/k/dz6SIeskmEV+
2N3CwaI2T20lNgs1JtFb2kQphFRWq91270ebq3i67vZSjM3RjvIhvlNovelo
xyQTntcqar5M9/Gs0yno8UB5MwXD3rANoYeHIff19OJp8xbQklKVw6a4SNix
KvfAxn5UZgqLDcaU/tfm6535s0dfOrjYsfSRY1hMHw4Yp8vf1i7jeX1h1o9Z
/ocpyJx2jcsifcHa9/JgdjYbwwfb5jN6KQRWdC7cnkCHkc7Y15WnG/HCyGyv
pyeFLQsEFzxrGsWzQhGbmG4GbOpf9f5iUJg6aep8V4CO0Q8n9p5LqMP3tq2O
qXoUhqdjhM/MJf6xd5vAXLv/XM/tFp+KZX2nsHePjg5j8RC+60JHyaAc4wbh
j4vCiJ/edD1psYwN7kH6Th3HIWjHPQ2dJNx7znlGk/IKDmaMurpo+DERyK9d
3Uf4bWJZGZc/dASa25G6V4cG87Twc/PJ9SM3EyYNNnBgr6/LLx/Dmw//088v
rdczFSD7FpL/aTKxaxRbHfx1pDkMjL5/dLT2J4VZRovT5LfSYHI1eZ+tRCFK
H7vJ1xEuetTkWHrYbwBZy5htv94U49fywsM+RH+25c51yflE+G+97KC8ZTFi
ez4cD7pJwf5aRGAHewD7O17mJIgW44vaWf32UgpV8RdcLK0ZiFulOZho1gEJ
4cQ5lwm/lVrvbHr/chAHSkPX1k0W4qhk88gRwv8nBQ6vE4obQlo4Hj24X42f
4SL+F5jEN+0lu+V/D6F6d+NcN8c6fPk+kXiymsILK6UbV78NQyYxeSotqw23
lx2MnGST+cr3vyWSN4SErwqdv+xq8CNFa0ZjBIU7W/XexrWNoGdi3c7cWhq8
pG8IVr+jcMB10+pzJwdhLuaSL7q3CPaXZGaMl1HQfbP0+oEkUqfA63+suIXo
jY5d+OcPhbJgr9umLjS88NM9LuJbiNmTE3wxYRyYXp5peTKvDZXUgiprlRqY
36/+8Zv4fsH6kZLIvkGMrF7onvi8EN66c9pnBVGw8GJckhsYQLDV75qOJcVw
YC7Iukp07MnTmW+CSwbRciVoFbO0ELueLHC/nsLFObWpyPn3emEpXrE4RbAc
JvY+a18so7D/84Hdcon9MHrw03HhtxJkKM5xX/2Q6JLWrX8880dgNbk11OIp
DbrMsRYqmpyjRuqYltEIwnJLhiLiBjH//dmkwVMUuq2+ay/M5MBHc3neodcs
9HU+fKT2nPRtlk9Xx+IR+Be6tS2wGIRnMF/ca18KrNPbej/tG0Xlj4LNe1qG
8cbZtZd5i3D737VS2jfZCE4aab5LeN+tuPv1st2jyKHqS+oId65fd8rV2q0B
I7bFMVU1xE9TrqpVdg7DyyEw8aN5G7yXzT16bD0X94TeGBY+60LpN5EQE1RC
szD9QDHhBOVd9zeuDmRBLdDOSHbBAG4Jx5mEeHFxabWu1ImDPaAljw6IjZXj
jU3vjFPTpN+6VKZcH9Eg1/rjhsREEQ4+MDlxr4KCoo78Dg8lBn57w3c6qB3e
hjrvDD6QuRAOmXGS+NDCM71zvysXoTVtRsJlkpMlE3pXWUw1oajvpIg4Xz3P
ufN3sZGIDiH8bFXr3n6AjezjKUJZrUN4q2N8xJvkEZvtzJclfwfxLjivaJNb
IfiEPY6EkjlKFLaIOvEvG0JrUyJ+niScniq+7NhSDs5FqX4smN0CY/UbGaYb
62A/2z+6YC0XadsT1zkHd0G821x7yd5KHFU6I9T3l3C4S0NohxUNzz+GH1w8
+plnnS/SIz/8c58LWzWVf/Z/6cHgXpWbZ6+VY+Dixa6abRyE+/blTfS3wOoP
c2lJeC3S2tX20DyIPr/u8i3IHEDVzZe68keLYXBv1XSkIxfSlyejHlZ3w8VA
6qOEbQXP75VUEqb55VHYLXRCNXuUgQOS47bL33ZhQt+0k82iEDNu8KBtkOTB
B0nh7+/U4l0UcoYIh5gefnG3d3oY+9N8XvP18OZVFUFTsxlGHBwpSkyL+t6C
S2/ki6b9a9FLP/NNaIjCLoXE3C276FD4KDYiOV6Pu0aqtqZk3s/u3jTLaA8D
D3dEU3mqHUgxFXzuTup5Jspo02cPIfZb//ZrDbVoivuzdUUkB55Sq1y8Rtsg
ctbtRuLsGmjcLrm1k+ToIF/rHIG1IyjdF/9gxYVBSE6a1011EZ/KnjSI7aZD
aeHJhSoGTVgqZ6BX9piCVbNbe93VEbwvlF6rtYCGIyE1YbcmRuE4f1T+xIJm
1Cp1vM9l1vG8XyWNa4IFpP60DrtXi3YwoOtul350bgekDiY1Do9REJ3HDKH0
iR5K9xyJdakg3OIccnOYgtbmpVGXl9IxaBdkqri1HinfzbNk8rh421pTn/mz
F0fLGtVVcsvw8W/sRq9GLrjrNolVXOhDwah11AzbMnyzao5fQPTtn88fjP5R
GAbTkrlC2453ronamR2zXolCuc7qF+s+9GNTombxkY4SPK25PbHtKhc0y3lc
5bM9eBOnJ8vtL8eLR6EvKj9RUPnWb65yZxACcsUnjBcXoePJ1NMqMy6mQlvp
k7u6oXbhip7iR979xt0xmn/5PYU14QJ+fUZMXF1pW3x3eQ+0JNgvpv+X61gl
/BtKOPDPX3FHr5KFXQ+abrpNUIia3eZS1kvD9GWZUF3w5qWP6WHLnyhwMCAb
tfn0ohbwOT5T8lGqQ9cZOc/BHxSOx4l9DZ+iIW1Rhr2dQhlMyxNb6+9RePfZ
qeXAnEHsX3QisYBWBBWDnDNOX4kvTO/Lm7IdwpwVgQ5JRpXoKJ47KeLJRnOS
yKnJxiosoFGiE3ObUJP0SExZiELufcbnRQ79+BY29svHrhRr1SY1xXaRvNxQ
6my+bgCjqV7JgSolqN7RIDRE7qs02Xfmi1Yazlq2746cLoHsS91nZulcvEp/
MRSe2QurqYd139m8+S3Erypi8hGFyMz13UufEx+p0Wfp2tCws8rT7hXhcymH
OZdGNBm4+O73mY2V7Xh+0KkxlOSvPo+3sf9uG8XQa51zThnDWGsSrdZI8gv/
x3tXDgUzIS8+fGGFai88NFIEHvWOouD4kT8aXk14PB3P3KlWj28i8+5KanNh
VSK+J7usC7C+j4vLKnnWqbv0ZZ0O6X+bTT++zVCl4ZWxtfTi1cRPpdVrPRNJ
vpssnpFhwcKaA7aHxLP6ccXlKXfpeS7OLCxIyFjZA1WT3+NTchWYx4kRCFDg
YpmbtrD5li6sEQnLjAuuxJPNLg9cL1Bo0RKkL5LnYMKh+0zBWSYu36iyvdlB
Ibvnd9nJOcNknsds5v1o4lnn1fHA9W1pFB5X8e96NMDE6YzlLnWPeXP+10KH
PT7ExwuV+2m7zUbw/VPQzoVZvHOTxO2/bxM/Eq4Qi6t+O4+JjCdX+Ie1uuGc
+OlcOOnDbXIx2/n42Hj4SVBl7fIhxOhZhvZ9Iz6SPl0epDaEaIlaS5uu8v+Y
P+snrvgV3qCw6eSG1a8/s9FpIVfel0xHw+ebeYuLKDy8WP9DgeRYlaa/Gsl2
nf/x+nR9n13VjiQX67F28xtxIWn1r4BbwwhmKzOVXh0lvOeq+8SW6MpyobXn
7xuysWXinKQHyacxbmb88S+Y8IqIdXUN68UYWh8lhpPc9Fn3nrI4G9uOmbxQ
3zb0H9fzzHA46CLhn9UKd3JNw9lQoIX7zjOhI7ps++mjuRSMwt/vy9VkIkhm
4cOIvm6e6zzVm1O27yLh555Yu78iHCgInxFq2fOf54Kh8gSJbsKZKR6GIpUN
bBQlyc5vrqH/x+tUacWdf2VG4ZC8XJWR1gCK7wwuvbmkBN/eWNrvvUohvHm9
KvPkKP7sOm6bKsj7OUPHjj+BRwiHO3Sqs3L7RtD3wE1jax/h0l/F0x/PUDCQ
CRlPfTyA1IpTfodvFaPYQ0SO60bh24Jc5r+uhK+XXu/eIc2CobTxj02XKEwO
FM6i/RoFp795irWWiSdTLzqcyf0uY1pf6ewg91NTrGvWS8e7159Dhycp9Er/
pt8opqGc9k4ly5l3HvT2brbaS/Kde5Z1tJMyG8avQ35lug9BVjDzaT/JHUZf
J1S3sIdxyHxD/feINrwy3L3EXIBC3MPJGkurflzYqOu06VwpHPeM5XwkPOmj
/Sb94BImFPXp9j+8u2G/vsU0U46Cqu9Hk7rwfjjmHB9JlC3F8mH/6LehFEqm
yhxK/gxgbq1N7OqxIp517jDSOSY+SHj1waTECzc6FnZ/S0263gCBeX9iZhoT
nx035WcpDMDK0GqVxpYSyMilGJi8JfPocvHezQ4m7EvkNwx79mFCZ1OdPdFn
SeNK49q6AdjI//07sKmY5/ceV/dUkye8eogWedDjNeHVdxNmZ73p2CP8TYL5
heQCl7ZZqceGIO+wZmZdSCU61538Z1EDBSdWzjvP58NYaMTvuN+uFQew3aft
BIXiV6e23v3NQcLE01anLSOo6V2kIB5H4ULQGf5nGSyELfqsIe0zgEnrxqRS
cwpNeek6nXokN9HdVZaIl2BVq1DR0eccSD6pKeiVa8cleS0jDFdjVb+MxOAh
kl9wVL/CluznNjcbseFizBdQXmpF6gySchUfdhtC/dGH70wHKjHjmsGpmQwO
RjTUpfbVdyDS2EPANaoKk9dPPtYep/BXqmJYXZMGTYbfyI7FhcgXrPemHeWi
OVfFdOJDN7LKNrlHOFfgT4DWeMYpDjJmbVAb6mrFBH90Sl9zDZ5emyPm20Nh
3adZZR6f6XiyRu36kuZG7Ot8PraY6PDXFcffSs9h4xpT+eo79SEMm+RHTERy
cSjzZCi/VC9cj4QWRRwrx8vivqE577mIOmfRnNHeixPDG439Gsqw5dpXw82L
CKfpxBW9Eu8CVym5yzCxErM3OiSetqTQNcSgTRuT/M7UP987swSbV5xN+nST
i0/2/f4RWT3gk9gaN5LEW+eDxc4EVyeTfDj8OE7jVDuCBQy2GSZUo7fhnNq+
u1yYVBQ4pDT24HtK4seih+Vo3d1lWlYzihBp70eS84n/Fds/WWRdDyvNxfz3
if6PbBTr54QTXpWKU1DY2oljI7Ye30YIDyhXbXOqH4KU7Wo+7ngNZG+4Rc0j
+fRHadMhh7sDeHf6xwaHqGKIZOy9IUk4ZNBupNg0dQQF7pn5O3xI7qlQo+sG
UPjua/k+rH0AeQYXs96uLsZk4ekMuRwKt7LiNj2wY6JjDScrOIj4/Cohw/2S
bEz8/ioxaVGBhsikcpdGwuf26p7PSI5uY7ANT2WPQP4XPan/Dg1V5WtX2PoT
7rr+vNFFYRSrpg1Xhp0fxlYv/ol12STPxhSZ9LkxwVqsGbegogcjg2vbmmJG
0VMy7vFQpBHM/H/kd+bWQ4v7RWUP8cdkY4WCDxVsHJ65bM+RTySXmFqtPU24
Za3zqLS7CeF2sSVPtVMrUBoVYn25kuybNtNltwwDH/1SVCnDdqLv7lqPbUew
6ffbe3q9xVAvdlqjrsH7/UiorFUSl0nmd1eBQNj3IRx9IlkQsrgOZipTS5wI
hxhn71aLYzHhI1a3631uH74n7tVRI/zA1x+61FCGieVmuVKcQ91Qfuq3bJCi
kBVq7DLLcwgvBBR/xilWocf3irpMGxt11tvd5yrXYtmNkFovy0bM3r2NM3Kf
8FLUPNFGxgjuSzfPLaV4v8d8EnB/o9NrwmmPnT492j2IPbnzva96F+HW9S73
pSQX/JRbWHldgAkDsz/CfjLd+H6FvYGRT/rk8oyejCYGMP/8Ca5JF2SO5js1
+HGRseLG+OT1HnTOH33kV1+Os4PMX1Hke//KfrGoL+XCq4vxNbqdjaT3nxXO
TFHoMWv7IPyBhqPbH6QoLyJ+IRdns/IYBaZtV1KXKheBiWdPyLwYgYOt15Os
zxS61wkxt6cz8IPS8HUq5c0zJpzVehqLKHRM+UheeNyPwdbO98pzS9Fs5jBj
ZzLRf37LBE0NFoJeTPxOce+HlIUzfTnxxyOTj++03eFgzfFv6bLWLOQ+6Aja
WUtB/3Nk0FQD6b+7O7m5qm1oj3uWeieO6FJB6dk19r1IPtD44cpq3nP9h5VH
Eyom3FJ2qjbqJgO/shRil8t3wilJVDCukOj23S/TD2IYsIiQPqLh34lHV2Zn
s19zYdObsOa3dy/Kthd37pblvf6l9NrrP+4S/lw1Xhepx8aj7xIWKnFDiKpk
BT2vp6A8wKpamjAM5wKTQ2/9W2Hm/1zyO9l/1dXhjMS3NFRHuI3dqi1GjZtI
owTh6rC+5tRy8WGi05baW+WacSD6ZofpFAdeiy61Rht14khlUeqRbUS3QylL
y2aK5KbJK9nHhiG89EePuTvvuQh7wnXYY0/h5fSuYd+zRGfW5U0cLS+Gc/Yu
67OjFN6W6w9/yBzChhkp6aLyNaj6af5oupNCoL6DvhuXjmUSs/j6bzchzLW9
fWskOZep40f4Fgwi1DboUEolbx/vWlfbkhBMYYON9qZbbwn/nXzgSt2m4/Ds
ydULST1zc/a933OJi5mK5veWbWAj5osvf1IrOa/o+8/qNw8j2AiJMuXN0Kxz
nd91hOi8yoBY2DMulJ35W44EkRwUWz9YLsfB6bSapxp9zXC3kS5ttKjDgarN
c3u+cXHhoefM6mX9uPV0uqDxcyl0G2/SPeOJzjiuv/HSkMydbGfGZHARzmVd
MjvXS/hNz3pHQBodhmWHFVvuNkK898BPOSUu7vA1bdxr0YXkEwOXZTwroTUu
WDZM9o1D96s5lzIE1/iyXrP2atCXdJRH0ChYH4yVOGdJx1y/iJYHMg1oz3hU
LUD0LVFo6LXjEsKRJ1dr/zrWDr27NoqJx7loDE9WOUG4+aKI3mfGbt55/zoz
yP9QAdENdUtmTBUD20T1md9WdeHGzzk7qqY5ELjz2o3a34laizNvWzSrMGvp
7Et5ZO7M7Y4p/FFhQYNifxkgefrUF9YqZ5Lfrwrb2S6fOYSPkunl+53L0BS5
hN5aw4Vm8EvX/Qf6kKN1pM31XBnklNO3SA1xcXXh64Ci/j7MXbWKyhbmnaOv
iUjxDRGuMEy55mI/dwjV3feqqPQyDPvUlPgzKBykr1GdI0oH08m0JItTR/JU
iot5E+n/e7+Oq9cOouDPycje94XYfeMcR0KV+JH/3U6D+n7k0m2FYt6XQBRD
QuOHSe7m/Cp9/Yb0j3bzVcNXbPxqO5JrUUNBYBzxa2nDyDuQvHfOhTa89Hr1
SfQ68dNNbGr+GBttnjt21YgRzv3YFLGN6JsltT/P6QMDN+9IxdxndGL82srd
Ok8oiDq4nSq8NIKwh9PriubQMPp3uN6c9Mk3VV2pL9QgiqJHuGI3ClEmridn
ZkfhstcOjYCHXFTsGP/Nvkhy0z2Jqi/Ej1ZIe4wGiNOw8Um+xkyrQjiLsi9n
Eh//cG+W3lbhUaTcMXVT1R+Gy/PSy4sriI9P9FjHr2WgY4Pet9MJvH8Xwevz
K4JyziLHKSRcDSj4vJgL1UOD+9R8RyCUMH/b7SGyD4MfO9UM6Ij38hWWref9
vFe1T1L/5BXim+8veM/0HkXgg+VGkf8wYGKsy0ytIzwg5rWRnjOMZUHK5jpl
rbivp7v4M9kHJ5d6i0uEm66mzlt++RgbgTNjw2aRc1cRaQjokaEjbO+VPd8X
1uNajd/+cML5B0abqh8fp6OT72NN5dEGJLsm5kQFUvjUeq5u2RQbDa1mq/SW
8X6vXZXVEO78i/g40yM04DUNxq2RKxm3i7FoPiXl20X0OWt8zW46HcmLf3mG
HG/CvZeIdyPc1bd+6eJ/PnFQePRxTM17FhqOCV2bRXz8zlPr/LGfI0i8oz/x
Xpx3Xg4+kOHtT/TfQnH2j2xjkq/KfG8UZvK+Xux79vaDJNdrdezaLWbGxQbH
IsXBgRGk3k0I/uRM+iRxteUFDgctAabFV+VHED/rtbZDKYUG0TebH9kxIOfi
JXH6bAf+HCtq+txCwSVzOk1h1zBMjnSalAvz1v8nmyQzmkhO99IUbk8geXIw
7bRQdF43wiqDqjTeUUjba22gXsGEo+tDmUWafYidwT82m+TT3OLbzz75cJDu
0PlYXZOFZ8tErN85UaAizgcyN3Ih67FL82Ya798Xne/QEr3kR4Gbf8k5cP0o
5ripP/S4P4zJ99zTV0l/Rqz53JAhTfTva67VpzMkH5k6dr45TeE1Xa19KIKD
Y/Flp2+fYEFrq4bChqMUPM9lXXAJ4mLp3iFDwf1syMd/vPfShcJz2q77h3o4
SAm7Lvj4FwsW5q2y/sT3rcyPzV3vx8AxsSfWBZMd+LGhLGo8j0KOpNr7p0MM
GIY80Z4T1gUMF4s6E39pW3+eFR3PhVRMd1zDQ97zNZ66ZmMd4WT1VkF524Wj
EHxZHbbIYRgBO3OEn3kTf18xaq8dNYrHy17EObswkFt3KafclYJd/h5DvjgO
/py5EXEhmIViich3+8nnTitiNOalcKC0qSWcEcni+b3sz158YkT3vrNY3kV5
XFx03rBCpfy/93uVP9J/X8XHcOGj3uLqtKcXaWeGQ/s3lYPDXN0u85vM49Iq
SXMzGu6+MHH4MfEZgdz1vi6/udgdpl0rvbUf6w+Mtb1/UIpwFW2LbAMu1kzJ
3uQX6saDd0+LdlMVaJ+sqXUyoBAssf3bR6kB9CQuf3NzXwkyvYU88iu5ePPs
pO2R7X3YvEquLt23DLGD5+6lPiB9cmnNJSWJQXgx7IJ9W4twRsmj7dJtDpLD
L1hmPmvDI+eQY5rbahCqzVK650Fh350ZIrm0Uax/bHb/zm8GSm4cvzVO9H/d
PYnQ0QE2OmKzs6sI1+hPB0iziW7UZoqK2r+gQT6vLHqrfjGK8taFJ83g4svn
Dcs63Dshqba3Z++yKqh99VdJbOFibCs3wiq4D85ec+127i6Df5Opk3MfF/5Z
bdcXFfdBZMWhBybLylAUe6rjyh8K9zoEw7afp2Gu+oHZLuWFSPv14n0jm4Jt
TLKtzQIaBJa57Uo3LuR5Lglj4ybPvnAwupSrtFWkE5fW51wVd6tCmJ/9lIwg
F7a7djSM3+3E2gdPaxgiVWj8/YU24z2ZNw/19/H3G1HvLjwlcaMe5pGlwwaE
r4ZEvzzf3DaIBqlSnW3JhVi4aEHd4Ai53zeaadsE+nHsqOFZY3YptH59lBHS
5yKBnlkRNtGF2g9hnDe/KuDTlH59sp9CqkFx7YoAOtJMTpedaWlArUZHoj/h
RpXkny0/f9AxaLteP/9NE06pql+JI/nRn+kbHXeCiYg7/9T7vOoB45tNpFYC
6ee8Dp2FPoRP3K8IRM8ZACXzzF+Z6P/vp3xL1PlHUXrRRThXbRg6qxiaQ2KE
z7e8bJOp6sTItYtvX/ZWYnVu4LByLOmrl9Yra4pZkEgwj1F6OgC7Swub4too
vFhz7dk2lWH4PDDhO3StGfG1x0+8OE/yTuXURnNdDppX9kaHvmPCf8UsaUqa
QuyzRX27bvZj9gLjeq8Vpbj18zHqbhPuVUzXWXCZDSPPMzHRcuT+Eo92XSc5
/cjx+7bar0YQtarifsUp3rmvY0mZF/8tCorfBxYcfMzGu8A8e79DxA/XyVT6
kf60Gpp5W3CEjVjV3CMH/9JxfcZOvyOXKWScWvHcr2gUJ+fJz8smnGKp9S/T
jeTBsAOZx0S7GRg7dOXEvNNdCJu3YDHnPYXbRs4Xq7cy4Wdv2hDK14Pah7Ie
nV+Jrx10H8i2HMJc/bFkpZm83y/Q9t6rdCuhsF9qh0ToWQaUm5qlijM7cPOA
tUCOIoW7K5tkHqT3Q8fdPrhhqATCbS/PbhFmgO///jTX/rSgxXXhr4KEM9uT
6PNPBVZo1Sg2NOXXrqnm/Ry1aiwx6Jw1F3/fimjP9u/Gu8GIWRoRFZh96lDg
8jcUpo03O6yQZIHjlGS9SK0fKthat5HkC/fsMY1H79kwPK0T4BDN+zmwtxs9
Q3g9yemGPvUBff1wafCUT44pwXHmJ7lAH6JvgscOLb09ioy93tb+xrzrdBu7
vutKNzn3YaamfxMdeePn37YtbsJd4UfxJYQ3hK82ZS5lDqJYf2dB071C7Oj9
4xBJ8rVU7IyY2pVcOIZwNV6GjqBuS+12bcJR+2vSOtd/Hobh0jkflVmteOph
vCv3HMkjj1SUXXdxEDvTq9KjiYkHNR9l5/GR3HewWXitUT+43ikNN2/yfn93
f4njuUMx//s886zRajoLkjtObtjZN4Agsdu3I8h+LgvaZiMrzAIlIaKSsJT3
71fnBvuuO2/Bgcgzs1GxHa3o5j/7z4hhLfRO/Y0/Pkn0083rvXcNDXrL16gP
vC2Bzo8rY/zE923fO/Xd0xmFi29cOuclb36779Bf5Uz8xTkzJPX1dRqUNWck
DB0vwpNC7j7HpxQKzy5PUdg6Ai+l7F7xB4No7U/SFEikYLKrSqHKhoXjN9mr
I0v74SxY6/KV6FJWiMS86Z+DsN4wbTfmxVtXRwIz5O3PUmh6JiX2wIlwjryf
SMssFnbRqq6ZEB7b8nHtCb9xDl7mXRceWzMCrf3VWkeTCDc+t433MyB9KKtk
PRHBe98uXVz+z9BPUv9G+d5gJg3TPmKqE3dL8bLXjF1ykULroqA9X2ZyUBUx
8e4weL8HOZL54VkNOUfpiZr7i3pYqD5DD6+vHUDwEQ8DiwMUlrY9qfpiOQAH
mQCbvq/F6BwwiDcg3L5FYZX81lJy3ubb5hrvKMYxr32HthM/TXwaxr1XN4I7
uolOm/NosG76o/gzjsLTMDfW+VgWjGxyBebaDGCx+tpvwRsIl5rN9V7F6Mfe
mDMPlR/xfr+w5qDkxRSSmx4FcBakE56zluBYmE4Q364ULLhI/O5N0yLa9jLC
xzcX655IqoGYtKDYl1Qy10c18ou/MrHOStiB3dWHN3dVZjh+o+DzyTdwqza5
/utVzSiFCqykl0TtkR3FNb0V2jc+1GHxQZsldW0NiH48l34/ikLeoe1a946M
4Hvli5nWbbzfG57ytsgf7KOwN/xb+auHdNzLuZaisrIRDtn9WS4kh85oYmxX
vDSMC7/bQ1yzWtBr6m5q/IHki5Mva32VmJhXs2+TwdNuJFgo5VxtpMAfxm14
EEQ4/M8ILWaSN4dvyIgwOxlP4doGA2fHaBaC1IzK75sM4JzeV6MdZN7lUvhE
L1tykLDmeMYIjQnmbY9NYiRfLBdlqlXsZWNj0SXTraW888X9W9+E7r0mujSo
WdnpyIJ3yPVs8bZ+WM9TVJWq4CCs2Cc8Va4DF7rHDRNXVmOfjPQy5ToO4hPT
oya2dOCMiOrTSKFqROS+oy1O4KD4b3iAl1k7nlE/62ifqnHRd2ji3mkuvPx/
KFcK9YAtKzn+R7UC7rKsFvP5FGZvUJI39utHcPCMwBC1UvRXTRbnR3Nx9Of2
xnWre5H0IVVewbIcH/36TfzdmZh4bj2h++Et5i8MZz5mtmP/MZOIJUuIDtdo
7HeO6cdj/82nU/6UIClvLMSFzHVdxunDm0LoOGpWsCD6TwNsfk14eBEe3j+2
WTnfaQBvzhrPnt9ZjHe2/zgzn3AQqZv/6vzvNnQuUVw8NFWNsV87n1nEkv0V
cbfW0WoH9/updKe6ahy6Kcf+0cmB7JpiCeegDvRzHWrFm6rgSb9XOUl0Xs5Z
Nrqqko5nzgdsdacasac4gnuM5B+j7JKZqm+7sGTRHq3T6rz9VDR7V81UKhst
vzVsDq+vwYFLyqlOLwiXvR4oTbDhYCDe9/D5y62IPGU4Y3pJLe4Kije78nPw
+RdnqZBVM47Ibw6QJv0+MXHbefUzom+r3eevWT2Iu+l/Is1Ti+Bo3rZvzVkO
mIrPtUx+tuKUmYkzCmrApzh/3tyHXEyk7EyS5O/FD9Xr0dLu5Uiy/XhyDunb
+aY9AT13h+FKjf72XNSKdtE0bmANhXjJu3LOHwfxwW/V+vjmQnSl8C0UGCY+
InShNk+ZjtY5xdYCTvUQEnNU9wvk4tWvZNOLD3swUTe9cUFxOT4vC3DqIX2+
32rVwf0RLNDe/7y6RGcAJh2XzHuILsULxNSNnx+FpkdymaIsA0YztbQ8Bygk
O4oXG3nRcWFr3M71bxugXslN2KnFwRIFKfq+Jy1gzIt3+15aC/s4s5XNRLcb
ObXcG7YcXOhYm2j/nYnIRY5fBKPJfAVO0QOtRhD4YOVWWinxYf6gv2ziF81C
ObNjTcncMUZXPorrh3D/rCepaVxwSiQDrsT14sHe3lSxCd7PtUSPShn0hJJc
PHA48LwaG/ErZo2rBA7hsMXANt9KCqEDi4QU0wcRq3dYKWqwEEkHrnIizlC4
sPP+xcpADiZ8rx+LNWIhOtWh5KfSKAb1l4x/Fa3HOZUD4SffN6A6s9ZHmHDp
vdnZVg0vBzBnxuwWee9iVDg/C8u8Q3LxxVL/KWc2Vs1/mJ/8k7cO5Ntf8dYm
OZ2xfqH92csDUPz37GF2bjF0rimkbs+iMFfwlPz2a0ysn/Hn56K5vRiNzZPQ
CqfwYPS311Y5Nkzdar9l7RvC/H8UpR2If727oXvy5VcaDFdrJtl18OYN7pKJ
nsQUwvM6pmbnF7IQQO9ZPF+ftz+yt2Aqh9Sjs/2cpYYnE5cqPdcpsHvgGgAP
pxMUsitClkQJcHFcjpbRtnsEXzsuT/hYkrlj2C0YdutGulcqp/3fCjzw6D6Z
Q3ztbrOU3vWyEcT7lvSXptDg/GBg9uA0hakzSbZyoYQr3pl/+JVehO21aS8s
HlPwa8y+yQgaQfWmY0oFq2jYVGMTMkuaC8sf887eHOmEtL6O1M/SSuRPnPjU
d4GCZK7BvblSHLR/3hJmfJSJIKVdWnwOFGamLR3ceJyLsCvseJ35bNgc1L+x
jZyX6FBa2uxzbMzqLNddNoeO43tdLRcXcCBtcCD37UA7zq7I2im+h/f/B1T9
WfhHxZvkl1uWeUYvR/HXv8Gv+zID0f4socliCnTW8uZeTwZ8yuVXfmjrwOH7
irc0fSm86nm/vfrQKEJLo7VL6MNgRnacNLhIdLhoccr4ph5ssu8w9xGuAP/w
+5lr/qWgFF/+2H7DIJq9uuZc+LcI2bf8F7IIv3lmSgl6qIzixPPKlJkBvPnN
Tk561Jbow6NaC3bUHBr2U8ZRI/aFEF6WsMI2k8L7Nytf7z4/iCqfnSmbDIsg
tKI5cpzoz/WZhxsMrg6jUFYlKaatBe+/i8Zn65Ic91Xj6ja+AWxN2kc7co43
b8QzpsezvSiIuKYMWCSNYpe6K2vPLZKH1HODDhN/P57qXzH1nI7GZO1l200b
cSDJYbq2gIKxZS/lXcTA06yE4JdzeP9/0r2Pk0b/fOEifrhNn0+uH3o3H0pI
1JViy9g/MwVJzvp54+SWSTMmDnxMFn29rYfnOrO67iq6k30uO7syzWachXKr
9K2H+QaRlrBu8wDhjS/PrzSUnB5Gu6xS8JaIFrCHxuZ5u1E4uq9YMfUCB3pF
wRc+rGQhqqZHQoLklK5PuTZr7o/i+cpHl8cPMDDDXH8qiuTf6GthW/I/sqD2
0+b12zsD8LRz0wn5Szhzh/XCHXY0hB2UNV2jypuHf34fkLUlOTfdyj9Y2Y+N
ymzqktQqOsnTl0T5SP3SLL00l98snBS0c2kUH8SU/+kF7t8JZ0Z5bNZQGoK4
+d1X40HloD+SHop9TnjgQLNYlvQIpg44rfDcNojFSj/uuY5T2KRnv/WT1BD6
71bd0yN6G3V6f6dyCJlfndYm5lE2fiV7i6oxeOtbl6xlvlYrBZQZtg8YDEN0
ykJVlNWM8WPZd169ozCS/05L9jMTo12uwX+l+vC95bj3MKl/zdd5s3ZyWIj/
ZR3cSw3gaA+z1mWKzPX5swOLjGh4F3N6xj4B3vsz16Js2IXov8eLfdeub2Jj
ttxds8SIIXyJ+2sOorcur345jW/hwo3tKD1dMAKLE9ZZn95SMCupELjYwETw
6euLBqx5//4t+2+GwFIPChFiMkPl7FEc3m52eaYoEwNKv4o5L4mOHeJat+oO
QuDlSG5ORBEuv+1ZG2DERcG/6X9XLezGlIJhjeNgBRySb58TJ/vplZcZmfFj
AKI2shf2/inCrpApy005HEzNUmkyeNuOyImI59fdq5FiF72WQ/TNp7xicVLy
APqdRJwrThdDSl4zWyWHwv0bVDbLaxD2SzNVt2kVITH80MkjShw0F1SlBK9v
gZmoDEtGug6mfodUNuqQ/WfYNIZO9EPHcc6fcZ8SLLaxvjeSQXTM/15wWCQT
It6mtx3denEtadVikTwKo6Ofds8eZ0CN34C9oKkL/jtmrJwi+wjxnrIaehcu
DE5n1ApV4sxq7g2NeVz8rhOSfpjbiVsGscri7ErIyT512FDORdqKfcbFG/sQ
a7P06fnbZZgyE+8b4FKonE6jf7s5BKmFTsK6WVUouLbgu0kJFzkVXccYin2Y
9WP5P/RI3r4vn++YVNjKwY7uJyVPXTsQ/cN7ifdwFWoPC+a0KlOwc/Gy2VnU
jxXXPlxZU1MCzfzQe5NLuIiWqQl89k8XaqZst/yKrMT8NK9jP0l+zMq6Fndl
/yAsLRbpPnErwp/0dzvzSW4KmRNYmrxsECmS594szS/C2lHqxl5bLuaqzZ3D
et6NEOHdSzOuVGDVzGp54U6S+2K6aSf+0vF9MspYp6EJaart11YXUhDXsrOW
TWKAZhIvMx7bCZXK0AX3GyicqzW4O//RML7Mp8YEt7TifwBjbr0j
   "], {{0, 0}, {26, 26}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{25.5, 
       FormBox["\"a\"", TraditionalForm]}, {24.5, 
       FormBox["\"b\"", TraditionalForm]}, {23.5, 
       FormBox["\"c\"", TraditionalForm]}, {22.5, 
       FormBox["\"d\"", TraditionalForm]}, {21.5, 
       FormBox["\"e\"", TraditionalForm]}, {20.5, 
       FormBox["\"f\"", TraditionalForm]}, {19.5, 
       FormBox["\"g\"", TraditionalForm]}, {18.5, 
       FormBox["\"h\"", TraditionalForm]}, {17.5, 
       FormBox["\"i\"", TraditionalForm]}, {16.5, 
       FormBox["\"j\"", TraditionalForm]}, {15.5, 
       FormBox["\"k\"", TraditionalForm]}, {14.5, 
       FormBox["\"l\"", TraditionalForm]}, {13.5, 
       FormBox["\"m\"", TraditionalForm]}, {12.5, 
       FormBox["\"n\"", TraditionalForm]}, {11.5, 
       FormBox["\"o\"", TraditionalForm]}, {10.5, 
       FormBox["\"p\"", TraditionalForm]}, {9.5, 
       FormBox["\"q\"", TraditionalForm]}, {8.5, 
       FormBox["\"r\"", TraditionalForm]}, {7.5, 
       FormBox["\"s\"", TraditionalForm]}, {6.5, 
       FormBox["\"t\"", TraditionalForm]}, {5.5, 
       FormBox["\"u\"", TraditionalForm]}, {4.5, 
       FormBox["\"v\"", TraditionalForm]}, {3.5, 
       FormBox["\"w\"", TraditionalForm]}, {2.5, 
       FormBox["\"x\"", TraditionalForm]}, {1.5, 
       FormBox["\"y\"", TraditionalForm]}, {0.5, 
       FormBox["\"z\"", TraditionalForm]}}, None}, {None, {{0.5, 
       FormBox["\"a\"", TraditionalForm]}, {1.5, 
       FormBox["\"b\"", TraditionalForm]}, {2.5, 
       FormBox["\"c\"", TraditionalForm]}, {3.5, 
       FormBox["\"d\"", TraditionalForm]}, {4.5, 
       FormBox["\"e\"", TraditionalForm]}, {5.5, 
       FormBox["\"f\"", TraditionalForm]}, {6.5, 
       FormBox["\"g\"", TraditionalForm]}, {7.5, 
       FormBox["\"h\"", TraditionalForm]}, {8.5, 
       FormBox["\"i\"", TraditionalForm]}, {9.5, 
       FormBox["\"j\"", TraditionalForm]}, {10.5, 
       FormBox["\"k\"", TraditionalForm]}, {11.5, 
       FormBox["\"l\"", TraditionalForm]}, {12.5, 
       FormBox["\"m\"", TraditionalForm]}, {13.5, 
       FormBox["\"n\"", TraditionalForm]}, {14.5, 
       FormBox["\"o\"", TraditionalForm]}, {15.5, 
       FormBox["\"p\"", TraditionalForm]}, {16.5, 
       FormBox["\"q\"", TraditionalForm]}, {17.5, 
       FormBox["\"r\"", TraditionalForm]}, {18.5, 
       FormBox["\"s\"", TraditionalForm]}, {19.5, 
       FormBox["\"t\"", TraditionalForm]}, {20.5, 
       FormBox["\"u\"", TraditionalForm]}, {21.5, 
       FormBox["\"v\"", TraditionalForm]}, {22.5, 
       FormBox["\"w\"", TraditionalForm]}, {23.5, 
       FormBox["\"x\"", TraditionalForm]}, {24.5, 
       FormBox["\"y\"", TraditionalForm]}, {25.5, 
       FormBox["\"z\"", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.9126385316171255`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"a21c7f1d-1546-46f6-bc73-3ecdd5514fc7"]
}, Open  ]],

Cell["\<\
And we see here, for example, that the \[OpenCurlyDoubleQuote]q\
\[CloseCurlyDoubleQuote] column is blank (zero probability) except on the \
\[OpenCurlyDoubleQuote]u\[CloseCurlyDoubleQuote] row.\
\>", "Abstract",
 CellChangeTimes->{
  3.912903559331939*^9},ExpressionUUID->"032067be-2f0c-4a38-acca-\
366bf28723c7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 580.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (2023\:5e747\:670824\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e7187cf2-f94d-410b-9261-87d03a96316b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 145, 3, 69, "Chapter",ExpressionUUID->"05b6603f-673a-4ed4-85c7-01f908012065"],
Cell[CellGroupData[{
Cell[750, 29, 462, 10, 43, "Input",ExpressionUUID->"b1be46b7-12ea-4f1e-85c1-c778a764c36a",
 CellID->1796951477],
Cell[1215, 41, 311952, 5091, 87, "Output",ExpressionUUID->"80da9bb8-a5d2-475c-83be-f9626db8d3d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313204, 5137, 792, 19, 62, "Input",ExpressionUUID->"a807cbfb-e33d-4ca4-bdbf-147f6d0653d9",
 CellID->1605084768],
Cell[313999, 5158, 31284, 560, 171, "Output",ExpressionUUID->"b0b5878a-141a-49fd-8a65-6e9b28e90c79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345320, 5723, 577, 14, 43, "Input",ExpressionUUID->"95dec6f5-169d-49dc-a645-fa2968f13295",
 CellID->1694131958],
Cell[345900, 5739, 895, 16, 109, "Output",ExpressionUUID->"f2da66f8-4568-42b4-954c-b26749c6d348"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346832, 5760, 779, 17, 43, "Input",ExpressionUUID->"19988047-f00d-4033-9d5f-bbc1df691bea",
 CellID->644418337],
Cell[347614, 5779, 187617, 3795, 237, "Output",ExpressionUUID->"3fff2500-605d-4d86-9785-3c15dd324684"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[535280, 9580, 224, 4, 69, "Chapter",ExpressionUUID->"9265678b-e72e-4809-b4d2-b90ac5f42d6f"],
Cell[CellGroupData[{
Cell[535529, 9588, 135, 3, 67, "Section",ExpressionUUID->"ee11067b-b13a-4f9f-9520-8d20fe073cb2"],
Cell[CellGroupData[{
Cell[535689, 9595, 432, 10, 43, "Input",ExpressionUUID->"06ca5e37-8506-4b7f-9613-75fb0c5e6bb4"],
Cell[536124, 9607, 4223, 107, 84, "Output",ExpressionUUID->"58c0422f-df14-4679-8edf-6dfd3af718cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540384, 9719, 3242, 68, 271, "Input",ExpressionUUID->"39ddf3af-ef29-4439-b9ea-08041f4fa51f",
 CellID->989946077],
Cell[543629, 9789, 95530, 1925, 387, "Output",ExpressionUUID->"69ec90cd-4411-412f-85d2-006992054c71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639208, 11720, 163, 3, 67, "Section",ExpressionUUID->"79d10095-ddbf-48fb-9e2b-b07e678e7ba4"],
Cell[CellGroupData[{
Cell[639396, 11727, 26853, 420, 168, "Input",ExpressionUUID->"4ef81279-9791-4922-8577-ec0c3382527a",
 CellID->1003506593],
Cell[666252, 12149, 20611, 353, 379, "Output",ExpressionUUID->"a21c7f1d-1546-46f6-bc73-3ecdd5514fc7"]
}, Open  ]],
Cell[686878, 12505, 324, 7, 62, "Abstract",ExpressionUUID->"032067be-2f0c-4a38-acca-366bf28723c7"]
}, Open  ]]
}, Open  ]]
}
]
*)

